{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/SAMURAI.AnimationController.html": {
    "href": "api/SAMURAI.AnimationController.html",
    "title": "Class AnimationController",
    "keywords": "Class AnimationController Inheritance System.Object AnimationController Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class AnimationController : MonoBehaviour Fields animator Declaration Animator animator Field Value Type Description Animator gameManager Declaration GameManager gameManager Field Value Type Description GameManager slash Declaration public GameObject slash Field Value Type Description GameObject state Declaration GameState state Field Value Type Description GameState Methods Attack() Declaration public void Attack() Run() Declaration public void Run() Start() Declaration void Start() Stay() Declaration public void Stay() SwitchState(StateChangedArg) Declaration void SwitchState(StateChangedArg a) Parameters Type Name Description StateChangedArg a Update() Declaration void Update() Events AttackEvent Declaration public event EventHandler AttackEvent Event Type Type Description System.EventHandler"
  },
  "api/SAMURAI.AvoidCarScript.html": {
    "href": "api/SAMURAI.AvoidCarScript.html",
    "title": "Class AvoidCarScript",
    "keywords": "Class AvoidCarScript Inheritance System.Object AvoidCarScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class AvoidCarScript : MonoBehaviour Methods OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.BackWholeMap.html": {
    "href": "api/SAMURAI.BackWholeMap.html",
    "title": "Class BackWholeMap",
    "keywords": "Class BackWholeMap Inheritance System.Object BackWholeMap Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class BackWholeMap : MonoBehaviour Fields _wholeMapVirtualCamera Declaration CinemachineVirtualCamera _wholeMapVirtualCamera Field Value Type Description Cinemachine.CinemachineVirtualCamera Properties WholeMapVirtualCamera Declaration public CinemachineVirtualCamera WholeMapVirtualCamera { get; } Property Value Type Description Cinemachine.CinemachineVirtualCamera"
  },
  "api/SAMURAI.Ball_Temp.html": {
    "href": "api/SAMURAI.Ball_Temp.html",
    "title": "Class Ball_Temp",
    "keywords": "Class Ball_Temp Inheritance System.Object Ball_Temp Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Ball_Temp : MonoBehaviour Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.BaseStageData.html": {
    "href": "api/SAMURAI.BaseStageData.html",
    "title": "Class BaseStageData",
    "keywords": "Class BaseStageData 各ステージのワールドと番号 Inheritance System.Object BaseStageData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class BaseStageData Constructors BaseStageData(WorldName, Int32) Declaration public BaseStageData(WorldName worldName, int stageNumber) Parameters Type Name Description WorldName worldName System.Int32 stageNumber Properties StageNumber Declaration public int StageNumber { get; set; } Property Value Type Description System.Int32 WorldName Declaration public WorldName WorldName { get; set; } Property Value Type Description WorldName"
  },
  "api/SAMURAI.BulletFunction.html": {
    "href": "api/SAMURAI.BulletFunction.html",
    "title": "Class BulletFunction",
    "keywords": "Class BulletFunction 弾丸との衝突の処理,自滅処理 Inheritance System.Object BulletFunction Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class BulletFunction : MonoBehaviour Fields _audioSource Declaration AudioSource _audioSource Field Value Type Description AudioSource _ball Declaration BallControler _ball Field Value Type Description BallControler _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager _isActive Declaration bool _isActive Field Value Type Description System.Boolean ResultSceneName Declaration public string ResultSceneName Field Value Type Description System.String Methods DestroyOneself() 時間がたつと勝手に消滅する Declaration IEnumerator DestroyOneself() Returns Type Description System.Collections.IEnumerator GameSceneLoaded(Scene, LoadSceneMode) 圧死リザルト用の処理 Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode GoResult() リザルトへ移動するためのコルーチン Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator InActiveFunction(Object, GoalEventArgs) ゴールが入ったら衝突時の機能を停止する Declaration public void InActiveFunction(object sender, GoalEventArgs goalEventArgs) Parameters Type Name Description System.Object sender GoalEventArgs goalEventArgs OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.CallStatueOfLiberty.html": {
    "href": "api/SAMURAI.CallStatueOfLiberty.html",
    "title": "Class CallStatueOfLiberty",
    "keywords": "Class CallStatueOfLiberty Inheritance System.Object CallStatueOfLiberty Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class CallStatueOfLiberty : MonoBehaviour Fields _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager StatuePrefab Declaration public GameObject StatuePrefab Field Value Type Description GameObject Methods CallStatueCoroutine() 自由の女神を呼び出す Declaration IEnumerator CallStatueCoroutine() Returns Type Description System.Collections.IEnumerator Start() Declaration void Start()"
  },
  "api/SAMURAI.ColliderInputData.html": {
    "href": "api/SAMURAI.ColliderInputData.html",
    "title": "Class ColliderInputData",
    "keywords": "Class ColliderInputData Inheritance System.Object ColliderInputData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class ColliderInputData Constructors ColliderInputData(Polygon[], CollisionObject) Declaration public ColliderInputData(Polygon[] polygons, CollisionObject collisionObjectInstance) Parameters Type Name Description Polygon [] polygons CollisionObject collisionObjectInstance Fields collisionObject Declaration public CollisionObject collisionObject Field Value Type Description CollisionObject polygons Declaration public Polygon[] polygons Field Value Type Description Polygon []"
  },
  "api/SAMURAI.CollisionInfo.html": {
    "href": "api/SAMURAI.CollisionInfo.html",
    "title": "Class CollisionInfo",
    "keywords": "Class CollisionInfo Inheritance System.Object CollisionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class CollisionInfo Constructors CollisionInfo(Polygon, Vector3, CollisionManager.ColliderType) Declaration public CollisionInfo(Polygon _polygon, Vector3 _hitPoint, CollisionManager.ColliderType _colliderType) Parameters Type Name Description Polygon _polygon Vector3 _hitPoint CollisionManager.ColliderType _colliderType Fields colliderType Declaration public CollisionManager.ColliderType colliderType Field Value Type Description CollisionManager.ColliderType hitPoint Declaration public Vector3 hitPoint Field Value Type Description Vector3 polygon Declaration public Polygon polygon Field Value Type Description Polygon"
  },
  "api/SAMURAI.CollisionManager.ColliderType.html": {
    "href": "api/SAMURAI.CollisionManager.ColliderType.html",
    "title": "Enum CollisionManager.ColliderType",
    "keywords": "Enum CollisionManager.ColliderType Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum ColliderType Fields Name Description EnemyBoby EnemyWeapon PlayerBody PlayerWeapon"
  },
  "api/SAMURAI.CollisionManager.html": {
    "href": "api/SAMURAI.CollisionManager.html",
    "title": "Class CollisionManager",
    "keywords": "Class CollisionManager Inheritance System.Object CollisionManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class CollisionManager : MonoBehaviour Fields enemyBody Declaration static List<ColliderInputData> enemyBody Field Value Type Description System.Collections.Generic.List < ColliderInputData > enemyWeapon Declaration static List<ColliderInputData> enemyWeapon Field Value Type Description System.Collections.Generic.List < ColliderInputData > playerBody Declaration static List<ColliderInputData> playerBody Field Value Type Description System.Collections.Generic.List < ColliderInputData > playerWeapon Declaration static List<ColliderInputData> playerWeapon Field Value Type Description System.Collections.Generic.List < ColliderInputData > PolygonTypeDic Declaration static readonly Dictionary<CollisionManager.ColliderType, List<ColliderInputData>> PolygonTypeDic Field Value Type Description System.Collections.Generic.Dictionary < CollisionManager.ColliderType , System.Collections.Generic.List < ColliderInputData >> Methods AddColliderDataList(ColliderInputData, CollisionManager.ColliderType) Declaration public static void AddColliderDataList(ColliderInputData colliderData, CollisionManager.ColliderType colliderType) Parameters Type Name Description ColliderInputData colliderData CollisionManager.ColliderType colliderType Clear() Declaration void Clear() CollisionCheck(ColliderInputData, ColliderInputData) Declaration void CollisionCheck(ColliderInputData A, ColliderInputData B) Parameters Type Name Description ColliderInputData A ColliderInputData B CollisionDetection(ColliderInputData, ColliderInputData, Polygon, Polygon, Vector3) Declaration void CollisionDetection(ColliderInputData A, ColliderInputData B, Polygon polygonA, Polygon polygonB, Vector3 hitPoint) Parameters Type Name Description ColliderInputData A ColliderInputData B Polygon polygonA Polygon polygonB Vector3 hitPoint LateUpdate() Declaration void LateUpdate() OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, out Vector3) Declaration public static bool OverrapCheck(Vector3 trianglePosition, Vector3 triangleVector1, Vector3 triangleVector2, Vector3 lineStartPosition, Vector3 lineVector, out Vector3 hitPoint) Parameters Type Name Description Vector3 trianglePosition Vector3 triangleVector1 Vector3 triangleVector2 Vector3 lineStartPosition Vector3 lineVector Vector3 hitPoint Returns Type Description System.Boolean"
  },
  "api/SAMURAI.CollisionObject.html": {
    "href": "api/SAMURAI.CollisionObject.html",
    "title": "Class CollisionObject",
    "keywords": "Class CollisionObject Inheritance System.Object CollisionObject Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public abstract class CollisionObject : MonoBehaviour Fields linePosInBeforeFrame Declaration List<Vector3[]> linePosInBeforeFrame Field Value Type Description System.Collections.Generic.List < Vector3 []> setupped Declaration bool setupped Field Value Type Description System.Boolean Properties ColliderType Declaration public abstract CollisionManager.ColliderType ColliderType { get; } Property Value Type Description CollisionManager.ColliderType LinesOfTrabsform Declaration protected abstract List<Transform[]> LinesOfTrabsform { get; } Property Value Type Description System.Collections.Generic.List < Transform []> Methods CheckCollision() 衝突判定をとってほしいフレームでCollisionManagerにPolygonをおくる, Update内で使うこと(LateUpdateはだめ) Declaration protected void CheckCollision() CollisionSetUp() Declaration void CollisionSetUp() LateUpdate() Declaration void LateUpdate() MakeArray() 当たり判定を検出する線分を追加する Declaration void MakeArray() OnCollision(CollisionInfo) 衝突が検知されたらこれが呼ばれる Declaration public abstract void OnCollision(CollisionInfo collisionInfo) Parameters Type Name Description CollisionInfo collisionInfo Start() Declaration void Start() StartOfCollisionInstance() Declaration protected abstract void StartOfCollisionInstance() UpdateOfCollisionInstance() Declaration protected abstract void UpdateOfCollisionInstance()"
  },
  "api/SAMURAI.CollisionWithStatue.html": {
    "href": "api/SAMURAI.CollisionWithStatue.html",
    "title": "Class CollisionWithStatue",
    "keywords": "Class CollisionWithStatue 自由の女神との衝突の処理 Inheritance System.Object CollisionWithStatue Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class CollisionWithStatue : MonoBehaviour Fields _audioSource Declaration AudioSource _audioSource Field Value Type Description AudioSource _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager _riseStatue Declaration RiseStatue _riseStatue Field Value Type Description RiseStatue ResultSceneName Declaration public string ResultSceneName Field Value Type Description System.String Methods GameSceneLoaded(Scene, LoadSceneMode) 圧死リザルト用の処理 Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode GoResult() リザルトへ移動するためのコルーチン Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other ResetBall(GameObject) Declaration IEnumerator ResetBall(GameObject Ball) Parameters Type Name Description GameObject Ball Returns Type Description System.Collections.IEnumerator Start() Declaration void Start()"
  },
  "api/SAMURAI.Constants.html": {
    "href": "api/SAMURAI.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants 定数 Inheritance System.Object Constants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public static class Constants Fields OppornentGoalPoint 相手のゴール Declaration public static readonly Vector3 OppornentGoalPoint Field Value Type Description Vector3 oppornentInitialSpornPointCenterOppornent Declaration static readonly IEnumerable<Vector3> oppornentInitialSpornPointCenterOppornent Field Value Type Description System.Collections.Generic.IEnumerable < Vector3 > oppornentInitialSpornPointCenterTeam Declaration static readonly IEnumerable<Vector3> oppornentInitialSpornPointCenterTeam Field Value Type Description System.Collections.Generic.IEnumerable < Vector3 > OurGoalPoint 自陣のゴール Declaration public static readonly Vector3 OurGoalPoint Field Value Type Description Vector3 teammateInitialSpornPointCenterOppornent Declaration static readonly IEnumerable<Vector3> teammateInitialSpornPointCenterOppornent Field Value Type Description System.Collections.Generic.IEnumerable < Vector3 > teammateInitialSpornPointCenterTeam Declaration static readonly IEnumerable<Vector3> teammateInitialSpornPointCenterTeam Field Value Type Description System.Collections.Generic.IEnumerable < Vector3 > Properties G2G ゴール間の距離 Declaration public static float G2G { get; } Property Value Type Description System.Single OppornentSpornPoint 相手のスポーン地点 Declaration public static Vector3 OppornentSpornPoint { get; } Property Value Type Description Vector3 OpprnentInitialSpornPointCenterOppornent 相手ボールのときの相手の最初のスポーン場所 Declaration public static Vector3[] OpprnentInitialSpornPointCenterOppornent { get; } Property Value Type Description Vector3 [] OpprnentInitialSpornPointCenterTeam 味方ボールのときの相手の最初のスポーン場所 Declaration public static Vector3[] OpprnentInitialSpornPointCenterTeam { get; } Property Value Type Description Vector3 [] TeammateInitialSpornPointCenterOppornent 相手ボールのときの味方の最初のスポーン場所 Declaration public static Vector3[] TeammateInitialSpornPointCenterOppornent { get; } Property Value Type Description Vector3 [] TeammateInitialSpornPointCenterTeam 味方ボールのときの味方の最初のスポーン場所 Declaration public static Vector3[] TeammateInitialSpornPointCenterTeam { get; } Property Value Type Description Vector3 [] TeammateSpornPoint 味方のスポーン地点 Declaration public static Vector3 TeammateSpornPoint { get; } Property Value Type Description Vector3 Width フィールドの幅 Declaration public static float Width { get; } Property Value Type Description System.Single"
  },
  "api/SAMURAI.CrowdMenber.html": {
    "href": "api/SAMURAI.CrowdMenber.html",
    "title": "Class CrowdMenber",
    "keywords": "Class CrowdMenber Inheritance System.Object CrowdMenber Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class CrowdMenber : MonoBehaviour Fields crowdMaterial Declaration public Material crowdMaterial Field Value Type Description Material crowdRenderers Declaration public Renderer[] crowdRenderers Field Value Type Description Renderer [] crowdTextures Declaration public Texture[] crowdTextures Field Value Type Description Texture [] Methods Start() Declaration void Start()"
  },
  "api/SAMURAI.EasyCPU.html": {
    "href": "api/SAMURAI.EasyCPU.html",
    "title": "Class EasyCPU",
    "keywords": "Class EasyCPU Inheritance System.Object EasyCPU Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class EasyCPU : MonoBehaviour Fields ball Declaration public BallControler ball Field Value Type Description BallControler before_velocity Declaration Vector2 before_velocity Field Value Type Description Vector2 dest Declaration public GameObject dest Field Value Type Description GameObject field Declaration public FieldManager field Field Value Type Description FieldManager isPause Declaration bool isPause Field Value Type Description System.Boolean manager Declaration public EasyCPUManager manager Field Value Type Description EasyCPUManager rb Declaration public Rigidbody rb Field Value Type Description Rigidbody rot_chain Declaration LinkedList<Vector2> rot_chain Field Value Type Description System.Collections.Generic.LinkedList < Vector2 > status Declaration public PersonalStatus status Field Value Type Description PersonalStatus stop Declaration bool stop Field Value Type Description System.Boolean Methods AllMove(Vector2) Declaration void AllMove(Vector2 dest) Parameters Type Name Description Vector2 dest Attacked() 攻撃されたときに呼ぶ。hpが減り、吹っ飛びやすくなる。 Declaration public void Attacked() CalcNextPoint(Vector2) Declaration Vector2 CalcNextPoint(Vector2 vec) Parameters Type Name Description Vector2 vec Returns Type Description Vector2 CalcRealVec(Vector2) Declaration Vector2 CalcRealVec(Vector2 vec) Parameters Type Name Description Vector2 vec Returns Type Description Vector2 CalcRotAverage() Declaration float CalcRotAverage() Returns Type Description System.Single OnCollisionEnter(Collision) Declaration void OnCollisionEnter(Collision other) Parameters Type Name Description Collision other Pause() Declaration public void Pause() Play() Declaration public void Play() SetMass() 吹っ飛びやすさを再設定 Declaration public void SetMass() SlowDown() Declaration public void SlowDown() SlowMove() Declaration IEnumerator SlowMove() Returns Type Description System.Collections.IEnumerator Update() Declaration void Update()"
  },
  "api/SAMURAI.EasyCPUManager.html": {
    "href": "api/SAMURAI.EasyCPUManager.html",
    "title": "Class EasyCPUManager",
    "keywords": "Class EasyCPUManager CPUを操作するクラス Inheritance System.Object EasyCPUManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class EasyCPUManager : MonoBehaviour Fields audioSource Declaration public AudioSource audioSource Field Value Type Description AudioSource ball Declaration public BallControler ball Field Value Type Description BallControler field Declaration FieldManager field Field Value Type Description FieldManager gm Declaration public GameManager gm Field Value Type Description GameManager goalCanvas Declaration public GameObject goalCanvas Field Value Type Description GameObject goalEvent Declaration BallControler.GoalEventHandler goalEvent Field Value Type Description BallControler.GoalEventHandler goalSound Declaration public AudioClip goalSound Field Value Type Description AudioClip near_opp Declaration [NonSerialized] public GameObject near_opp Field Value Type Description GameObject near_team Declaration [NonSerialized] public GameObject near_team Field Value Type Description GameObject opp Declaration public List<GameObject> opp Field Value Type Description System.Collections.Generic.List < GameObject > opp_p Declaration public Transform opp_p Field Value Type Description Transform opp_stock Declaration public Team opp_stock Field Value Type Description Team opponent Declaration GameObject opponent Field Value Type Description GameObject rbs Declaration public Dictionary<GameObject, Rigidbody> rbs Field Value Type Description System.Collections.Generic.Dictionary < GameObject , Rigidbody > referee Declaration public GameObject referee Field Value Type Description GameObject samurai Declaration public GameObject samurai Field Value Type Description GameObject startSound Declaration public AudioClip startSound Field Value Type Description AudioClip team Declaration public List<GameObject> team Field Value Type Description System.Collections.Generic.List < GameObject > team_p Declaration public Transform team_p Field Value Type Description Transform team_stock Declaration public Team team_stock Field Value Type Description Team teammate Declaration GameObject teammate Field Value Type Description GameObject timer Declaration public TimerScript timer Field Value Type Description TimerScript Properties OpponentMemberCount 敵の人数 Declaration public int OpponentMemberCount { get; } Property Value Type Description System.Int32 TeamMemberCount 味方の人数 Declaration public int TeamMemberCount { get; } Property Value Type Description System.Int32 Methods Awake() Declaration void Awake() Boost(Boolean, Single, Int32) ブースト Declaration public void Boost(bool isTeam, float coeff, int finishTime = 0) Parameters Type Name Description System.Boolean isTeam 味方にブーストか System.Single coeff 倍率 System.Int32 finishTime ブースト終了時間 FinBoost(Boolean, Single, Int32) Declaration IEnumerator FinBoost(bool isTeam, float coeff, int fin) Parameters Type Name Description System.Boolean isTeam System.Single coeff System.Int32 fin Returns Type Description System.Collections.IEnumerator GoalAction(GoalEventArgs) Declaration IEnumerator GoalAction(GoalEventArgs e) Parameters Type Name Description GoalEventArgs e Returns Type Description System.Collections.IEnumerator Init(Boolean) 初期化。選手の生成をしてる。 Declaration public void Init(bool centerIsOppornent = true) Parameters Type Name Description System.Boolean centerIsOppornent kill(GameObject) 選手を殺す。一応瞬時復活もさせる。 Declaration public void kill(GameObject dead) Parameters Type Name Description GameObject dead 死ぬ対象の選手 LoadMember() Declaration IEnumerator LoadMember() Returns Type Description System.Collections.IEnumerator Sporn(PersonalStatus, Vector3) 選手復活 Declaration public GameObject Sporn(PersonalStatus status, Vector3 pos) Parameters Type Name Description PersonalStatus status ステータス Vector3 pos 復活場所 Returns Type Description GameObject Start() Declaration void Start() StateChanged(StateChangedArg) Declaration void StateChanged(StateChangedArg e) Parameters Type Name Description StateChangedArg e Update() Declaration void Update()"
  },
  "api/SAMURAI.EMoveScript.html": {
    "href": "api/SAMURAI.EMoveScript.html",
    "title": "Class EMoveScript",
    "keywords": "Class EMoveScript Inheritance System.Object EMoveScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class EMoveScript : MonoBehaviour Fields field Declaration public int[] field Field Value Type Description System.Int32 [] Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.EMoveScript.moveDirection.html": {
    "href": "api/SAMURAI.EMoveScript.moveDirection.html",
    "title": "Enum EMoveScript.moveDirection",
    "keywords": "Enum EMoveScript.moveDirection Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax enum moveDirection Fields Name Description E NE SE"
  },
  "api/SAMURAI.Extentions.html": {
    "href": "api/SAMURAI.Extentions.html",
    "title": "Class Extentions",
    "keywords": "Class Extentions Inheritance System.Object Extentions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public static class Extentions Methods ToVector2Int(GameObject) Declaration public static Vector2Int ToVector2Int(this GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description Vector2Int"
  },
  "api/SAMURAI.FieldInfo.html": {
    "href": "api/SAMURAI.FieldInfo.html",
    "title": "Class FieldInfo",
    "keywords": "Class FieldInfo フィールド Inheritance System.Object FieldInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax [Serializable] public class FieldInfo Fields acc_down_coeff Declaration public float[][] acc_down_coeff Field Value Type Description System.Single [][] acc_up_coeff Declaration public float[][] acc_up_coeff Field Value Type Description System.Single [][] drag Declaration public float[][] drag Field Value Type Description System.Single [][] Methods GetAccDownCoeff(Vector3) Declaration public float GetAccDownCoeff(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description System.Single GetAccUpCoeff(Vector3) Declaration public float GetAccUpCoeff(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description System.Single Getdrag(Vector3) Declaration public float Getdrag(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description System.Single"
  },
  "api/SAMURAI.FieldMaker.html": {
    "href": "api/SAMURAI.FieldMaker.html",
    "title": "Class FieldMaker",
    "keywords": "Class FieldMaker フィールドを作るためのクラス。メニューウィンドウに出るけど実行用。スクリプトで内容を書く。 Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.EditorWindow FieldMaker Inherited Members UnityEditor.EditorWindow.BeginWindows() UnityEditor.EditorWindow.EndWindows() UnityEditor.EditorWindow.OnResized() UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent) UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent, System.Double) UnityEditor.EditorWindow.RemoveNotification() UnityEditor.EditorWindow.ShowTab() UnityEditor.EditorWindow.Focus() UnityEditor.EditorWindow.ShowUtility() UnityEditor.EditorWindow.ShowPopup() UnityEditor.EditorWindow.ShowModalUtility() UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect, UnityEngine.Vector2) UnityEditor.EditorWindow.Show() UnityEditor.EditorWindow.Show(System.Boolean) UnityEditor.EditorWindow.ShowAuxWindow() UnityEditor.EditorWindow.ShowModal() UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean) UnityEditor.EditorWindow.GetWindow(System.Type) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, System.Boolean) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect) UnityEditor.EditorWindow.GetWindow<T>() UnityEditor.EditorWindow.GetWindow<T>(System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Boolean, System.String) UnityEditor.EditorWindow.GetWindow<T>(System.String) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Type[]) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Type[]) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Boolean, System.Type[]) UnityEditor.EditorWindow.CreateWindow<T>(System.Type[]) UnityEditor.EditorWindow.CreateWindow<T>(System.String, System.Type[]) UnityEditor.EditorWindow.HasOpenInstances<T>() UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type) UnityEditor.EditorWindow.FocusWindowIfItsOpen<T>() UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.Close() UnityEditor.EditorWindow.Repaint() UnityEditor.EditorWindow.SendEvent(UnityEngine.Event) UnityEditor.EditorWindow.GetExtraPaneTypes() UnityEditor.EditorWindow.rootVisualElement UnityEditor.EditorWindow.wantsMouseMove UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow UnityEditor.EditorWindow.autoRepaintOnSceneChange UnityEditor.EditorWindow.maximized UnityEditor.EditorWindow.focusedWindow UnityEditor.EditorWindow.mouseOverWindow UnityEditor.EditorWindow.minSize UnityEditor.EditorWindow.maxSize UnityEditor.EditorWindow.title UnityEditor.EditorWindow.titleContent UnityEditor.EditorWindow.depthBufferBits UnityEditor.EditorWindow.antiAlias UnityEditor.EditorWindow.position UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp-Editor.dll Syntax public class FieldMaker : EditorWindow Methods ClickButton() Declaration [MenuItem(\"Custom/FieldMaker\")] static void ClickButton()"
  },
  "api/SAMURAI.FieldManager.html": {
    "href": "api/SAMURAI.FieldManager.html",
    "title": "Class FieldManager",
    "keywords": "Class FieldManager フィールド情報を管理する。 Inheritance System.Object FieldManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class FieldManager : MonoBehaviour Fields ball Declaration public GameObject ball Field Value Type Description GameObject ball_rb Declaration Rigidbody ball_rb Field Value Type Description Rigidbody gm Declaration public GameManager gm Field Value Type Description GameManager info Declaration [NonSerialized] public FieldInfo info Field Value Type Description FieldInfo isPlaying Declaration bool isPlaying Field Value Type Description System.Boolean manager Declaration public EasyCPUManager manager Field Value Type Description EasyCPUManager root Declaration public GameObject root Field Value Type Description GameObject rotation Declaration public FieldRotationBase rotation Field Value Type Description FieldRotationBase wind Declaration WindInfoBase wind Field Value Type Description WindInfoBase Methods AdaptInversePosition(Vector3) 開店前の位置に変換 Declaration public Vector3 AdaptInversePosition(Vector3 pos) Parameters Type Name Description Vector3 pos 元の場所 Returns Type Description Vector3 変換後の場所 AdaptPosition(Vector3) 回転後の位置に変換 Declaration public Vector3 AdaptPosition(Vector3 pos) Parameters Type Name Description Vector3 pos 元の場所 Returns Type Description Vector3 変換後の場所 Awake() Declaration void Awake() FixedUpdate() Declaration void FixedUpdate() LoadField() Declaration IEnumerator LoadField() Returns Type Description System.Collections.IEnumerator StateChanged(StateChangedArg) Declaration void StateChanged(StateChangedArg e) Parameters Type Name Description StateChangedArg e Update() Declaration void Update()"
  },
  "api/SAMURAI.FieldNumber.html": {
    "href": "api/SAMURAI.FieldNumber.html",
    "title": "Class FieldNumber",
    "keywords": "Class FieldNumber 何番目のフィールドを読み込むか Inheritance System.Object FieldNumber Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public static class FieldNumber Fields no Declaration public static int no Field Value Type Description System.Int32"
  },
  "api/SAMURAI.FieldRotationBase.html": {
    "href": "api/SAMURAI.FieldRotationBase.html",
    "title": "Class FieldRotationBase",
    "keywords": "Class FieldRotationBase フィールドの傾きを持ったクラス。ここから派生。 Inheritance System.Object FieldRotationBase NonRotation Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public abstract class FieldRotationBase : MonoBehaviour Fields rotation 回転 Declaration public Quaternion rotation Field Value Type Description Quaternion Methods AdaptInversePosition(Vector3) Declaration public Vector3 AdaptInversePosition(Vector3 pos) Parameters Type Name Description Vector3 pos Returns Type Description Vector3 AdaptPosition(Vector3) Declaration public Vector3 AdaptPosition(Vector3 pos) Parameters Type Name Description Vector3 pos Returns Type Description Vector3 Awake() 初期化。ご自由に。 Declaration protected virtual void Awake()"
  },
  "api/SAMURAI.FinishProcess.html": {
    "href": "api/SAMURAI.FinishProcess.html",
    "title": "Class FinishProcess",
    "keywords": "Class FinishProcess Inheritance System.Object FinishProcess Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class FinishProcess : MonoBehaviour Fields _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager audioSource Declaration AudioSource audioSource Field Value Type Description AudioSource finishSound Declaration AudioClip finishSound Field Value Type Description AudioClip ResultSceneName Declaration public string ResultSceneName Field Value Type Description System.String Methods FinishProcessContent(StateChangedArg) Declaration public void FinishProcessContent(StateChangedArg stateChangedArg) Parameters Type Name Description StateChangedArg stateChangedArg GoResult() Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator Start() Declaration void Start()"
  },
  "api/SAMURAI.FinishState.html": {
    "href": "api/SAMURAI.FinishState.html",
    "title": "Class FinishState",
    "keywords": "Class FinishState Inheritance System.Object FinishState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class FinishState : ImtStateMachine<GameManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.FireHypnoticBullets.html": {
    "href": "api/SAMURAI.FireHypnoticBullets.html",
    "title": "Class FireHypnoticBullets",
    "keywords": "Class FireHypnoticBullets 敵選手に付けて弾を撃たせる Inheritance System.Object FireHypnoticBullets Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class FireHypnoticBullets : MonoBehaviour Fields _fireDuration Declaration float _fireDuration Field Value Type Description System.Single _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager _Samurai Declaration GameObject _Samurai Field Value Type Description GameObject HypnoticBullets Declaration GameObject HypnoticBullets Field Value Type Description GameObject Methods FireBulletSycle() 一定時間ごとに弾を撃つ Declaration IEnumerator FireBulletSycle() Returns Type Description System.Collections.IEnumerator Start() Declaration void Start()"
  },
  "api/SAMURAI.Flag.html": {
    "href": "api/SAMURAI.Flag.html",
    "title": "Class Flag",
    "keywords": "Class Flag Inheritance System.Object Flag Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Flag : MonoBehaviour Fields meshes Declaration MeshRenderer[] meshes Field Value Type Description MeshRenderer [] shader Declaration Shader shader Field Value Type Description Shader texture Declaration Texture texture Field Value Type Description Texture Methods Start() Declaration void Start()"
  },
  "api/SAMURAI.GameManager.html": {
    "href": "api/SAMURAI.GameManager.html",
    "title": "Class GameManager",
    "keywords": "Class GameManager Inheritance System.Object GameManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class GameManager : MonoBehaviour Fields _gameManagerStateMachine Declaration ImtStateMachine<GameManager> _gameManagerStateMachine Field Value Type Description ImtStateMachine < GameManager > state Declaration GameState state Field Value Type Description GameState Properties CurrentGameState Declaration public GameState CurrentGameState { get; } Property Value Type Description GameState Methods Awake() Declaration void Awake() CurrentStateChanger(GameState) デバッグ用 現在のStateを変更する Declaration public void CurrentStateChanger(GameState gameState) Parameters Type Name Description GameState gameState CurrentStateResercher() デバッグ用 現在のStateを確認する Declaration public void CurrentStateResercher() Start() Declaration void Start() StartStateChangeEvent(GameState) イベント発火関数 Declaration public void StartStateChangeEvent(GameState gameState) Parameters Type Name Description GameState gameState StateChangeSignal(GameState) 任意のStateに変更するIdをステートマシンに送る Declaration public void StateChangeSignal(GameState state) Parameters Type Name Description GameState state Update() Declaration void Update() Events StateChange Stateの移動時に呼ばれるイベント Declaration public event StateChangedHandler StateChange Event Type Type Description StateChangedHandler"
  },
  "api/SAMURAI.GameOverPanel.html": {
    "href": "api/SAMURAI.GameOverPanel.html",
    "title": "Class GameOverPanel",
    "keywords": "Class GameOverPanel Inheritance System.Object GameOverPanel Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class GameOverPanel : MonoBehaviour Fields col Declaration Color col Field Value Type Description Color image Declaration Image image Field Value Type Description Image time Declaration float time Field Value Type Description System.Single Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.GameState.html": {
    "href": "api/SAMURAI.GameState.html",
    "title": "Enum GameState",
    "keywords": "Enum GameState メインゲームの状態 Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum GameState Fields Name Description Finish Pause Playing Reset Standby"
  },
  "api/SAMURAI.GoalCut.html": {
    "href": "api/SAMURAI.GoalCut.html",
    "title": "Class GoalCut",
    "keywords": "Class GoalCut Inheritance System.Object GoalCut Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class GoalCut : MonoBehaviour Fields cutted Declaration bool cutted Field Value Type Description System.Boolean Methods Cut() Declaration void Cut() OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.GoalText.html": {
    "href": "api/SAMURAI.GoalText.html",
    "title": "Class GoalText",
    "keywords": "Class GoalText Inheritance System.Object GoalText Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class GoalText : MonoBehaviour Fields text Declaration public TextMeshProUGUI text Field Value Type Description TMPro.TextMeshProUGUI Methods ColorChange() Declaration IEnumerator ColorChange() Returns Type Description System.Collections.IEnumerator OnEnable() Declaration void OnEnable()"
  },
  "api/SAMURAI.GoalView.html": {
    "href": "api/SAMURAI.GoalView.html",
    "title": "Class GoalView",
    "keywords": "Class GoalView Inheritance System.Object GoalView Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class GoalView : MonoBehaviour Fields image Declaration public Image image Field Value Type Description Image Methods ColorChange() Declaration IEnumerator ColorChange() Returns Type Description System.Collections.IEnumerator OnEnable() Declaration void OnEnable()"
  },
  "api/SAMURAI.GroundTexture.html": {
    "href": "api/SAMURAI.GroundTexture.html",
    "title": "Class GroundTexture",
    "keywords": "Class GroundTexture Inheritance System.Object GroundTexture Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class GroundTexture : MonoBehaviour Fields groundNormalMap Declaration Texture groundNormalMap Field Value Type Description Texture groundTexture Declaration Texture groundTexture Field Value Type Description Texture Methods Start() Declaration void Start()"
  },
  "api/SAMURAI.html": {
    "href": "api/SAMURAI.html",
    "title": "Namespace SAMURAI",
    "keywords": "Namespace SAMURAI Classes AnimationController AvoidCarScript BackWholeMap Ball_Temp BaseStageData 各ステージのワールドと番号 BulletFunction 弾丸との衝突の処理,自滅処理 CallStatueOfLiberty ColliderInputData CollisionInfo CollisionManager CollisionObject CollisionWithStatue 自由の女神との衝突の処理 Constants 定数 CrowdMenber EasyCPU EasyCPUManager CPUを操作するクラス EMoveScript Extentions FieldInfo フィールド FieldMaker フィールドを作るためのクラス。メニューウィンドウに出るけど実行用。スクリプトで内容を書く。 FieldManager フィールド情報を管理する。 FieldNumber 何番目のフィールドを読み込むか FieldRotationBase フィールドの傾きを持ったクラス。ここから派生。 FinishProcess FinishState FireHypnoticBullets 敵選手に付けて弾を撃たせる Flag GameManager GameOverPanel GoalCut GoalText GoalView GroundTexture IceStageManager JiangshiPostProcessing JiangshiSceneManager JudgeGameEnd KunfuReferee KunfuSceneManager LoadAnyScene MeshCut MeshCut.MeshData MeshCut.RectangleFragment MeshCut.TriangleFragment ModelDebug NonRotation NonWind NumberManager OpponentName 敵チームの名前の保存場所 Panda PandaMaker PanjanExplode PanjanMake PanjanRoll particle PauseBackScript PauseButton PauseButtonScript PauseState Penalty PlayingState PointScript Polygon RefereeArea RefereeMove ResetState ResultManager RiseStatue 自由の女神が上がってきて倒れる動きの監視+実効 SamuraiDebugger SamuraiWordBase SamuraiWordBaseEditor SceneObject SelectStateInput SelectStateManager ShotObjectScript SkinnedMeshCut SkinnedMeshCut.MeshData Slash slidepad Snow StageData StageDataHolder StageDataManager StageDataSave StageIcon StageIconButton StagePrefabManager StagePrefabManagerEditor StagePreviewState StagePreviwScript StageSelect StageSelectBGM ステージセレクトのBGMを監理。 StageSelectData StageSelectManager StageSelectState StandardFade 他のタイプにも対応したいが、現状はTextのみ対応 StandbyState StandbyStateProcess StartCoroutineForPlayingState StateChangedArg StrikeObjectScript SugiTemp SwitchCPU Sword TargetWorldData Team TeamMaker test test_StageDataHolder TimerScript VanishAndBorn Wall_temp WindInfoBase 風の情報を持ったクラス。これから派生させてください。 WorldSelectState Structs slidepad.Boundy SwitchCPU.WeightSet Interfaces StageDataReceiver Enums CollisionManager.ColliderType EMoveScript.moveDirection GameState メインゲームの状態 Result SelectState ステージ選択画面の状態 StageSelectManager.StageSelectState いまはStageSelectManagerにつけてるけど、適当なオブジェクトにつけて、オブジェクトを適切につければ動くよ StageState StatueMode 自由の女神の状態 WorldName 各ステージの名前と順番 Delegates StateChangedHandler"
  },
  "api/SAMURAI.IceStageManager.html": {
    "href": "api/SAMURAI.IceStageManager.html",
    "title": "Class IceStageManager",
    "keywords": "Class IceStageManager Inheritance System.Object IceStageManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class IceStageManager : MonoBehaviour Fields eclanoplan Declaration public GameObject eclanoplan Field Value Type Description GameObject greenMaterial Declaration public Material greenMaterial Field Value Type Description Material greenTexture Declaration public Texture greenTexture Field Value Type Description Texture iceMaterial Declaration public Material iceMaterial Field Value Type Description Material iceTexture Declaration public Texture iceTexture Field Value Type Description Texture no Declaration public static int no Field Value Type Description System.Int32 stageManager Declaration public StagePrefabManager stageManager Field Value Type Description StagePrefabManager Methods Awake() Declaration void Awake()"
  },
  "api/SAMURAI.JiangshiPostProcessing.html": {
    "href": "api/SAMURAI.JiangshiPostProcessing.html",
    "title": "Class JiangshiPostProcessing",
    "keywords": "Class JiangshiPostProcessing Inheritance System.Object JiangshiPostProcessing Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class JiangshiPostProcessing : MonoBehaviour Fields material Declaration public Material material Field Value Type Description Material Methods OnRenderImage(RenderTexture, RenderTexture) Declaration void OnRenderImage(RenderTexture src, RenderTexture dest) Parameters Type Name Description RenderTexture src RenderTexture dest Start() Declaration void Start()"
  },
  "api/SAMURAI.JiangshiSceneManager.html": {
    "href": "api/SAMURAI.JiangshiSceneManager.html",
    "title": "Class JiangshiSceneManager",
    "keywords": "Class JiangshiSceneManager Inheritance System.Object JiangshiSceneManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class JiangshiSceneManager : MonoBehaviour Fields areaSize Declaration public int areaSize Field Value Type Description System.Int32 jianshi Declaration GameObject jianshi Field Value Type Description GameObject prefab Declaration GameObject prefab Field Value Type Description GameObject referee Declaration GameObject referee Field Value Type Description GameObject refereeArea Declaration RefereeArea refereeArea Field Value Type Description RefereeArea refereeMove Declaration RefereeMove refereeMove Field Value Type Description RefereeMove Methods Awake() Declaration void Awake() Update() Declaration void Update()"
  },
  "api/SAMURAI.JudgeGameEnd.html": {
    "href": "api/SAMURAI.JudgeGameEnd.html",
    "title": "Class JudgeGameEnd",
    "keywords": "Class JudgeGameEnd Inheritance System.Object JudgeGameEnd Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class JudgeGameEnd : MonoBehaviour Fields _easyCPUManager Declaration EasyCPUManager _easyCPUManager Field Value Type Description EasyCPUManager _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager audioSource Declaration AudioSource audioSource Field Value Type Description AudioSource finishSound Declaration AudioClip finishSound Field Value Type Description AudioClip ResultSceneName Declaration public string ResultSceneName Field Value Type Description System.String Methods GameSceneLoaded(Scene, LoadSceneMode) 勝利リザルト用の処理 Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode GoResult() リザルトへ移動するためのコルーチン Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.KunfuReferee.html": {
    "href": "api/SAMURAI.KunfuReferee.html",
    "title": "Class KunfuReferee",
    "keywords": "Class KunfuReferee Inheritance System.Object RefereeMove KunfuReferee Inherited Members RefereeMove.ball RefereeMove.lookatspeed RefereeMove.runningspeed RefereeMove.radius RefereeMove.rig RefereeMove.refereeArea RefereeMove.gameManager RefereeMove.state RefereeMove.anicon RefereeMove.SwitchState(StateChangedArg) RefereeMove.Update() RefereeMove.MoveAroundBall() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class KunfuReferee : RefereeMove Methods LookAtBall() Declaration protected override void LookAtBall() Overrides RefereeMove.LookAtBall() Start() Declaration protected override void Start() Overrides RefereeMove.Start()"
  },
  "api/SAMURAI.KunfuSceneManager.html": {
    "href": "api/SAMURAI.KunfuSceneManager.html",
    "title": "Class KunfuSceneManager",
    "keywords": "Class KunfuSceneManager Inheritance System.Object KunfuSceneManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class KunfuSceneManager : MonoBehaviour Fields kunfu Declaration GameObject kunfu Field Value Type Description GameObject prefab Declaration GameObject prefab Field Value Type Description GameObject referee Declaration GameObject referee Field Value Type Description GameObject Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.LoadAnyScene.html": {
    "href": "api/SAMURAI.LoadAnyScene.html",
    "title": "Class LoadAnyScene",
    "keywords": "Class LoadAnyScene Inheritance System.Object LoadAnyScene Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class LoadAnyScene : MonoBehaviour Methods LoadScene(String) Scene遷移 Declaration public void LoadScene(string targetSceneName) Parameters Type Name Description System.String targetSceneName ロード先のScene"
  },
  "api/SAMURAI.MeshCut.html": {
    "href": "api/SAMURAI.MeshCut.html",
    "title": "Class MeshCut",
    "keywords": "Class MeshCut Inheritance System.Object MeshCut Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class MeshCut : MonoBehaviour Fields _backMeshData Declaration static MeshCut.MeshData _backMeshData Field Value Type Description MeshCut.MeshData _frontMeshData Declaration static MeshCut.MeshData _frontMeshData Field Value Type Description MeshCut.MeshData _isFront Declaration static bool[] _isFront Field Value Type Description System.Boolean [] _slashPlane Declaration static Plane _slashPlane Field Value Type Description Plane _targetMesh Declaration static Mesh _targetMesh Field Value Type Description Mesh _targetNormals Declaration static Vector3[] _targetNormals Field Value Type Description Vector3 [] _targetUVs Declaration static Vector2[] _targetUVs Field Value Type Description Vector2 [] _targetVertices Declaration static Vector3[] _targetVertices Field Value Type Description Vector3 [] Methods CutMesh(GameObject, Vector3, Vector3) gameObjectを切断して2つのMeshにして返します. 1つ目のMeshが切断面の法線に対して表側, 2つ目が裏側です. 何度も切るようなオブジェクトでも頂点数が増えないように処理をしてあります Declaration public static Mesh[] CutMesh(GameObject target, Vector3 planeAnchorPoint, Vector3 planeNormalDirection) Parameters Type Name Description GameObject target 切断対象のgameObject Vector3 planeAnchorPoint 切断面上の1点 Vector3 planeNormalDirection 切断面の法線 Returns Type Description Mesh [] CutMeshOnce(GameObject, Vector3, Vector3) gameObjectを切断して2つのMeshにして返します. 1つ目のMeshが切断面の法線に対して表側, 2つ目が裏側です. 切断の処理が雑なので何度も斬ると頂点数が膨れ上がります. そのかわり一回斬るだけならこっちが早い Declaration public static Mesh[] CutMeshOnce(GameObject target, Vector3 planeAnchorPoint, Vector3 planeNormalDirection) Parameters Type Name Description GameObject target 切断対象のgameObject Vector3 planeAnchorPoint 切断面上の1点 Vector3 planeNormalDirection 切断面の法線 Returns Type Description Mesh [] CutMeshRough(GameObject, Vector3, Vector3) gameObjectを雑に切断して2つのMeshにして返します. 切断面がザラザラなのでハイポリにしか使えませんが処理はちょっと早いです. 1つ目のMeshが切断面の法線に対して表側, 2つ目が裏側です. Declaration public static Mesh[] CutMeshRough(GameObject target, Vector3 planeAnchorPoint, Vector3 planeNormalDirection) Parameters Type Name Description GameObject target 切断対象のgameObject Vector3 planeAnchorPoint 切断面上の1点 Vector3 planeNormalDirection 切断面の法線 Returns Type Description Mesh [] Sepalate(Boolean[], Int32[], Int32) Declaration static void Sepalate(bool[] sides, int[] vertexIndices, int submesh) Parameters Type Name Description System.Boolean [] sides System.Int32 [] vertexIndices System.Int32 submesh SepalateOnce(Boolean[], Int32[], Int32) Declaration static void SepalateOnce(bool[] sides, int[] vertexIndices, int submesh) Parameters Type Name Description System.Boolean [] sides System.Int32 [] vertexIndices System.Int32 submesh"
  },
  "api/SAMURAI.MeshCut.MeshData.html": {
    "href": "api/SAMURAI.MeshCut.MeshData.html",
    "title": "Class MeshCut.MeshData",
    "keywords": "Class MeshCut.MeshData Inheritance System.Object MeshCut.MeshData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class MeshData Fields normals Declaration public List<Vector3> normals Field Value Type Description System.Collections.Generic.List < Vector3 > rectangleFragments Declaration public List<List<MeshCut.RectangleFragment>> rectangleFragments Field Value Type Description System.Collections.Generic.List < System.Collections.Generic.List < MeshCut.RectangleFragment >> subMeshIndices Declaration public List<List<int>> subMeshIndices Field Value Type Description System.Collections.Generic.List < System.Collections.Generic.List < System.Int32 >> threshold Declaration const float threshold = 0.0001F Field Value Type Description System.Single trackedArray Declaration int[] trackedArray Field Value Type Description System.Int32 [] trackedVertexNum Declaration int trackedVertexNum Field Value Type Description System.Int32 trackNum Declaration int trackNum Field Value Type Description System.Int32 triangleFragments Declaration public List<List<MeshCut.TriangleFragment>> triangleFragments Field Value Type Description System.Collections.Generic.List < System.Collections.Generic.List < MeshCut.TriangleFragment >> triangles Declaration public List<int> triangles Field Value Type Description System.Collections.Generic.List < System.Int32 > uvs Declaration public List<Vector2> uvs Field Value Type Description System.Collections.Generic.List < Vector2 > vertices Declaration public List<Vector3> vertices Field Value Type Description System.Collections.Generic.List < Vector3 > verticesArray Declaration public Vector3[] verticesArray Field Value Type Description Vector3 [] Methods AddTriangle(Int32, Int32, Int32, Int32) Declaration public void AddTriangle(int p1, int p2, int p3, int submeshNum) Parameters Type Name Description System.Int32 p1 System.Int32 p2 System.Int32 p3 System.Int32 submeshNum AddTriangle(Int32, Int32, Vector3, Vector3, Vector2, Int32) Declaration public void AddTriangle(int notCutIndex0, int notCutIndex1, Vector3 cutPoint, Vector3 normal, Vector2 uv, int submeshNum) Parameters Type Name Description System.Int32 notCutIndex0 System.Int32 notCutIndex1 Vector3 cutPoint Vector3 normal Vector2 uv System.Int32 submeshNum AddTriangle(Int32, Vector3, Vector3, Vector3[], Vector2[], Int32) Declaration public void AddTriangle(int notCutIndex, Vector3 cutPoint1, Vector3 cutPoint2, Vector3[] normals3, Vector2[] uvs3, int submeshNum) Parameters Type Name Description System.Int32 notCutIndex Vector3 cutPoint1 Vector3 cutPoint2 Vector3 [] normals3 Vector2 [] uvs3 System.Int32 submeshNum CheckIndex(Int32) Declaration bool CheckIndex(int target) Parameters Type Name Description System.Int32 target Returns Type Description System.Boolean ClearAll() Declaration public void ClearAll() ConnectFragments() Declaration public void ConnectFragments()"
  },
  "api/SAMURAI.MeshCut.RectangleFragment.html": {
    "href": "api/SAMURAI.MeshCut.RectangleFragment.html",
    "title": "Class MeshCut.RectangleFragment",
    "keywords": "Class MeshCut.RectangleFragment Inheritance System.Object MeshCut.RectangleFragment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class RectangleFragment Constructors RectangleFragment(Int32, Int32, Vector3, Vector3, Vector2[], Vector3[]) Declaration public RectangleFragment(int notCutPoint1Index, int notCutPoint2Index, Vector3 cutPoint1, Vector3 cutPoint2, Vector2[] uvs, Vector3[] normals) Parameters Type Name Description System.Int32 notCutPoint1Index System.Int32 notCutPoint2Index Vector3 cutPoint1 Vector3 cutPoint2 Vector2 [] uvs Vector3 [] normals Fields cutLine Declaration public Vector3 cutLine Field Value Type Description Vector3 cutPoints Declaration public Vector3[] cutPoints Field Value Type Description Vector3 [] normals Declaration public Vector3[] normals Field Value Type Description Vector3 [] notCutPointIndecies Declaration public int[] notCutPointIndecies Field Value Type Description System.Int32 [] uvs Declaration public Vector2[] uvs Field Value Type Description Vector2 []"
  },
  "api/SAMURAI.MeshCut.TriangleFragment.html": {
    "href": "api/SAMURAI.MeshCut.TriangleFragment.html",
    "title": "Class MeshCut.TriangleFragment",
    "keywords": "Class MeshCut.TriangleFragment Inheritance System.Object MeshCut.TriangleFragment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class TriangleFragment Constructors TriangleFragment(Int32, Vector3, Vector3, Vector2[], Vector3[]) Declaration public TriangleFragment(int notCutPoint1Index, Vector3 cutPoint1, Vector3 cutPoint2, Vector2[] uvs, Vector3[] normals) Parameters Type Name Description System.Int32 notCutPoint1Index Vector3 cutPoint1 Vector3 cutPoint2 Vector2 [] uvs Vector3 [] normals Fields cutLine Declaration public Vector3 cutLine Field Value Type Description Vector3 cutPoints Declaration public Vector3[] cutPoints Field Value Type Description Vector3 [] normals Declaration public Vector3[] normals Field Value Type Description Vector3 [] notCutPointIndecies Declaration public int notCutPointIndecies Field Value Type Description System.Int32 uvs Declaration public Vector2[] uvs Field Value Type Description Vector2 []"
  },
  "api/SAMURAI.ModelDebug.html": {
    "href": "api/SAMURAI.ModelDebug.html",
    "title": "Class ModelDebug",
    "keywords": "Class ModelDebug Inheritance System.Object ModelDebug Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class ModelDebug : MonoBehaviour Fields prefabNameAndjsonName Declaration public string prefabNameAndjsonName Field Value Type Description System.String Methods Awake() Declaration void Awake()"
  },
  "api/SAMURAI.NonRotation.html": {
    "href": "api/SAMURAI.NonRotation.html",
    "title": "Class NonRotation",
    "keywords": "Class NonRotation Inheritance System.Object FieldRotationBase NonRotation Inherited Members FieldRotationBase.rotation FieldRotationBase.AdaptPosition(Vector3) FieldRotationBase.AdaptInversePosition(Vector3) Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class NonRotation : FieldRotationBase Methods Awake() Declaration protected override void Awake() Overrides FieldRotationBase.Awake()"
  },
  "api/SAMURAI.NonWind.html": {
    "href": "api/SAMURAI.NonWind.html",
    "title": "Class NonWind",
    "keywords": "Class NonWind Inheritance System.Object WindInfoBase NonWind Inherited Members WindInfoBase.wind WindInfoBase.WindEffect(Vector3) Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class NonWind : WindInfoBase Methods Start() Declaration protected override void Start() Overrides WindInfoBase.Start()"
  },
  "api/SAMURAI.NumberManager.html": {
    "href": "api/SAMURAI.NumberManager.html",
    "title": "Class NumberManager",
    "keywords": "Class NumberManager Inheritance System.Object NumberManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class NumberManager : MonoBehaviour Fields cpuManager Declaration public EasyCPUManager cpuManager Field Value Type Description EasyCPUManager enemyNumber Declaration public Text enemyNumber Field Value Type Description Text Methods Update() Declaration void Update()"
  },
  "api/SAMURAI.OpponentName.html": {
    "href": "api/SAMURAI.OpponentName.html",
    "title": "Class OpponentName",
    "keywords": "Class OpponentName 敵チームの名前の保存場所 Inheritance System.Object OpponentName Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public static class OpponentName Fields name 敵チームの名前 Declaration public static string name Field Value Type Description System.String"
  },
  "api/SAMURAI.Panda.html": {
    "href": "api/SAMURAI.Panda.html",
    "title": "Class Panda",
    "keywords": "Class Panda Inheritance System.Object Panda Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Panda : MonoBehaviour Fields anim Declaration Animator anim Field Value Type Description Animator gameManager Declaration GameManager gameManager Field Value Type Description GameManager gameOverPanel Declaration public GameObject gameOverPanel Field Value Type Description GameObject hit Declaration bool hit Field Value Type Description System.Boolean m_expandAmount Declaration float m_expandAmount Field Value Type Description System.Single skin Declaration SkinnedMeshRenderer skin Field Value Type Description SkinnedMeshRenderer speed Declaration float speed Field Value Type Description System.Single state Declaration GameState state Field Value Type Description GameState Methods GameOver() Declaration public void GameOver() GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() SwitchState(StateChangedArg) Declaration void SwitchState(StateChangedArg a) Parameters Type Name Description StateChangedArg a Update() Declaration void Update()"
  },
  "api/SAMURAI.PandaMaker.html": {
    "href": "api/SAMURAI.PandaMaker.html",
    "title": "Class PandaMaker",
    "keywords": "Class PandaMaker Inheritance System.Object PandaMaker Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PandaMaker : MonoBehaviour Fields gameManager Declaration GameManager gameManager Field Value Type Description GameManager maxSize Declaration float maxSize Field Value Type Description System.Single minSize Declaration float minSize Field Value Type Description System.Single panda Declaration GameObject panda Field Value Type Description GameObject state Declaration GameState state Field Value Type Description GameState Methods Spawn() Declaration void Spawn() Start() Declaration void Start() SwitchState(StateChangedArg) Declaration void SwitchState(StateChangedArg a) Parameters Type Name Description StateChangedArg a Update() Declaration void Update()"
  },
  "api/SAMURAI.PanjanExplode.html": {
    "href": "api/SAMURAI.PanjanExplode.html",
    "title": "Class PanjanExplode",
    "keywords": "Class PanjanExplode Inheritance System.Object PanjanExplode Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PanjanExplode : MonoBehaviour Fields gameManager Declaration GameManager gameManager Field Value Type Description GameManager isEnd Declaration bool isEnd Field Value Type Description System.Boolean ResultSceneName Declaration string ResultSceneName Field Value Type Description System.String Methods GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode GoResult() Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator OnCollisionEnter(Collision) Declaration void OnCollisionEnter(Collision other) Parameters Type Name Description Collision other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.PanjanMake.html": {
    "href": "api/SAMURAI.PanjanMake.html",
    "title": "Class PanjanMake",
    "keywords": "Class PanjanMake Inheritance System.Object PanjanMake Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PanjanMake : MonoBehaviour Fields gameManager Declaration GameManager gameManager Field Value Type Description GameManager panjan Declaration public GameObject panjan Field Value Type Description GameObject panjanExist Declaration bool panjanExist Field Value Type Description System.Boolean Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.PanjanRoll.html": {
    "href": "api/SAMURAI.PanjanRoll.html",
    "title": "Class PanjanRoll",
    "keywords": "Class PanjanRoll Inheritance System.Object PanjanRoll Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PanjanRoll : MonoBehaviour Fields exploded Declaration bool exploded Field Value Type Description System.Boolean fire Declaration public GameObject fire Field Value Type Description GameObject gameManager Declaration GameManager gameManager Field Value Type Description GameManager isEnd Declaration bool isEnd Field Value Type Description System.Boolean moveSpeed Declaration public float moveSpeed Field Value Type Description System.Single partMax Declaration public int partMax Field Value Type Description System.Int32 player Declaration Transform player Field Value Type Description Transform ResultSceneName Declaration string ResultSceneName Field Value Type Description System.String rot Declaration GameObject rot Field Value Type Description GameObject rotSpeed Declaration public float rotSpeed Field Value Type Description System.Single Methods Explode() Declaration void Explode() Move() Declaration void Move() OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other selfExplode() Declaration void selfExplode() Start() Declaration void Start() Update() Declaration void Update() waitDestroy() Declaration IEnumerator waitDestroy() Returns Type Description System.Collections.IEnumerator"
  },
  "api/SAMURAI.particle.html": {
    "href": "api/SAMURAI.particle.html",
    "title": "Class particle",
    "keywords": "Class particle Inheritance System.Object particle Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class particle : MonoBehaviour Methods OnParticleCollision(GameObject) Declaration void OnParticleCollision(GameObject other) Parameters Type Name Description GameObject other PA() Declaration public void PA() Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.PauseBackScript.html": {
    "href": "api/SAMURAI.PauseBackScript.html",
    "title": "Class PauseBackScript",
    "keywords": "Class PauseBackScript Inheritance System.Object PauseBackScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PauseBackScript : MonoBehaviour Fields button Declaration Button button Field Value Type Description Button end Declaration bool end Field Value Type Description System.Boolean gameManager Declaration public GameManager gameManager Field Value Type Description GameManager judgeGameEnd Declaration JudgeGameEnd judgeGameEnd Field Value Type Description JudgeGameEnd playing Declaration public bool playing Field Value Type Description System.Boolean Methods Awake() Declaration void Awake() OnClick() Declaration public void OnClick() Pause() Declaration public void Pause() PauseBackButton(StateChangedArg) Declaration public void PauseBackButton(StateChangedArg stateChangedArg) Parameters Type Name Description StateChangedArg stateChangedArg Playing() Declaration public void Playing() Reset() Declaration public void Reset() Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.PauseButton.html": {
    "href": "api/SAMURAI.PauseButton.html",
    "title": "Class PauseButton",
    "keywords": "Class PauseButton Inheritance System.Object PauseButton Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PauseButton : MonoBehaviour Fields gameManager Declaration GameManager gameManager Field Value Type Description GameManager pausePanel Declaration public GameObject pausePanel Field Value Type Description GameObject Methods ContinueButton() Declaration public void ContinueButton() MenuBackButton() Declaration public void MenuBackButton() OnClick() Declaration public void OnClick() RestartButton() Declaration public void RestartButton() Start() Declaration void Start()"
  },
  "api/SAMURAI.PauseButtonScript.html": {
    "href": "api/SAMURAI.PauseButtonScript.html",
    "title": "Class PauseButtonScript",
    "keywords": "Class PauseButtonScript Inheritance System.Object PauseButtonScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PauseButtonScript : MonoBehaviour Fields button Declaration Button button Field Value Type Description Button end Declaration bool end Field Value Type Description System.Boolean gameManager Declaration public GameManager gameManager Field Value Type Description GameManager judgeGameEnd Declaration JudgeGameEnd judgeGameEnd Field Value Type Description JudgeGameEnd playing Declaration public bool playing Field Value Type Description System.Boolean Methods Awake() Declaration void Awake() OnClick() Declaration public void OnClick() Pause() Declaration public void Pause() PauseButton(StateChangedArg) Declaration public void PauseButton(StateChangedArg stateChangedArg) Parameters Type Name Description StateChangedArg stateChangedArg Playing() Declaration public void Playing() Reset() Declaration public void Reset() Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.PauseState.html": {
    "href": "api/SAMURAI.PauseState.html",
    "title": "Class PauseState",
    "keywords": "Class PauseState Inheritance System.Object PauseState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PauseState : ImtStateMachine<GameManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.Penalty.html": {
    "href": "api/SAMURAI.Penalty.html",
    "title": "Class Penalty",
    "keywords": "Class Penalty Inheritance System.Object Penalty Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Penalty : MonoBehaviour Fields gameManager Declaration GameManager gameManager Field Value Type Description GameManager gameOverPanel Declaration public GameObject gameOverPanel Field Value Type Description GameObject penaltycount Declaration int penaltycount Field Value Type Description System.Int32 redAudioClip Declaration public AudioClip redAudioClip Field Value Type Description AudioClip refereeAudio Declaration AudioSource refereeAudio Field Value Type Description AudioSource state Declaration GameState state Field Value Type Description GameState yellowAudioClip Declaration public AudioClip yellowAudioClip Field Value Type Description AudioClip yellowCard Declaration public GameObject[] yellowCard Field Value Type Description GameObject [] Methods GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode Reset(StateChangedArg) Declaration void Reset(StateChangedArg a) Parameters Type Name Description StateChangedArg a Start() Declaration void Start() Update() Declaration void Update() YellowCard() Declaration public void YellowCard()"
  },
  "api/SAMURAI.PlayingState.html": {
    "href": "api/SAMURAI.PlayingState.html",
    "title": "Class PlayingState",
    "keywords": "Class PlayingState Inheritance System.Object PlayingState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PlayingState : ImtStateMachine<GameManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.PointScript.html": {
    "href": "api/SAMURAI.PointScript.html",
    "title": "Class PointScript",
    "keywords": "Class PointScript Inheritance System.Object PointScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class PointScript : MonoBehaviour Fields ballControler Declaration public BallControler ballControler Field Value Type Description BallControler leftSide Declaration public bool leftSide Field Value Type Description System.Boolean point Declaration int[] point Field Value Type Description System.Int32 [] text Declaration public Text text Field Value Type Description Text Methods Awake() Declaration void Awake() GainPoint(GoalEventArgs) Declaration public void GainPoint(GoalEventArgs e) Parameters Type Name Description GoalEventArgs e GetPoint(Int32) Declaration public int GetPoint(int p) Parameters Type Name Description System.Int32 p Returns Type Description System.Int32 Point(Object, GoalEventArgs) Declaration public void Point(object sender, GoalEventArgs e) Parameters Type Name Description System.Object sender GoalEventArgs e ResetPoint(Boolean) Declaration public void ResetPoint(bool p) Parameters Type Name Description System.Boolean p Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.Polygon.html": {
    "href": "api/SAMURAI.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance System.Object Polygon Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Polygon Constructors Polygon(Vector3, Vector3, Vector3) Declaration public Polygon(Vector3 vertex1, Vector3 vertex2, Vector3 vertex3) Parameters Type Name Description Vector3 vertex1 Vector3 vertex2 Vector3 vertex3 Fields vertices Declaration public Vector3[] vertices Field Value Type Description Vector3 []"
  },
  "api/SAMURAI.RefereeArea.html": {
    "href": "api/SAMURAI.RefereeArea.html",
    "title": "Class RefereeArea",
    "keywords": "Class RefereeArea Inheritance System.Object RefereeArea Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class RefereeArea : MonoBehaviour Fields anicom Declaration public AnimationController anicom Field Value Type Description AnimationController areaSize Declaration float areaSize Field Value Type Description System.Single attackButton Declaration public Button attackButton Field Value Type Description Button gameManager Declaration GameManager gameManager Field Value Type Description GameManager maxang Declaration float maxang Field Value Type Description System.Single meshFilter Declaration MeshFilter meshFilter Field Value Type Description MeshFilter penaltyManager Declaration public Penalty penaltyManager Field Value Type Description Penalty state Declaration GameState state Field Value Type Description GameState surprisedMark Declaration public ParticleSystem surprisedMark Field Value Type Description ParticleSystem useObstacles Declaration public bool useObstacles Field Value Type Description System.Boolean Properties AreaSize Declaration public float AreaSize { get; } Property Value Type Description System.Single MaxAngle Declaration public float MaxAngle { get; } Property Value Type Description System.Single Methods DynamicMeshMaker() Declaration void DynamicMeshMaker() FoulCheck(Object, EventArgs) Declaration void FoulCheck(object sender, EventArgs e) Parameters Type Name Description System.Object sender System.EventArgs e MeshMaker() Declaration public void MeshMaker() PenaltyRemoval() Declaration void PenaltyRemoval() SerAreaSize(Single) Declaration public void SerAreaSize(float newValue) Parameters Type Name Description System.Single newValue SerMaxAngle(Single) Declaration public void SerMaxAngle(float newValue) Parameters Type Name Description System.Single newValue Start() Declaration void Start() SwitchState(StateChangedArg) Declaration void SwitchState(StateChangedArg a) Parameters Type Name Description StateChangedArg a Update() Declaration void Update()"
  },
  "api/SAMURAI.RefereeMove.html": {
    "href": "api/SAMURAI.RefereeMove.html",
    "title": "Class RefereeMove",
    "keywords": "Class RefereeMove Inheritance System.Object RefereeMove KunfuReferee Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class RefereeMove : MonoBehaviour Fields anicon Declaration public Animator anicon Field Value Type Description Animator ball Declaration public GameObject ball Field Value Type Description GameObject gameManager Declaration GameManager gameManager Field Value Type Description GameManager lookatspeed Declaration public float lookatspeed Field Value Type Description System.Single radius Declaration public float radius Field Value Type Description System.Single refereeArea Declaration public RefereeArea refereeArea Field Value Type Description RefereeArea rig Declaration Rigidbody rig Field Value Type Description Rigidbody runningspeed Declaration public float runningspeed Field Value Type Description System.Single state Declaration GameState state Field Value Type Description GameState Methods LookAtBall() Declaration protected virtual void LookAtBall() MoveAroundBall() Declaration void MoveAroundBall() Start() Declaration protected virtual void Start() SwitchState(StateChangedArg) Declaration void SwitchState(StateChangedArg a) Parameters Type Name Description StateChangedArg a Update() Declaration protected virtual void Update()"
  },
  "api/SAMURAI.ResetState.html": {
    "href": "api/SAMURAI.ResetState.html",
    "title": "Class ResetState",
    "keywords": "Class ResetState Inheritance System.Object ResetState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class ResetState : ImtStateMachine<GameManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.Result.html": {
    "href": "api/SAMURAI.Result.html",
    "title": "Enum Result",
    "keywords": "Enum Result Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum Result Fields Name Description Draw Lose Undefined Win"
  },
  "api/SAMURAI.ResultManager.html": {
    "href": "api/SAMURAI.ResultManager.html",
    "title": "Class ResultManager",
    "keywords": "Class ResultManager Inheritance System.Object ResultManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class ResultManager : MonoBehaviour Fields background Declaration public Camera background Field Value Type Description Camera result Declaration Text result Field Value Type Description Text resultText Declaration public string resultText Field Value Type Description System.String samuraiPhrase Declaration Text samuraiPhrase Field Value Type Description Text samuraiWordBase Declaration public SamuraiWordBase samuraiWordBase Field Value Type Description SamuraiWordBase texts Declaration public List<Text> texts Field Value Type Description System.Collections.Generic.List < Text > Properties ResultState Declaration public Result ResultState { get; } Property Value Type Description Result Methods SetResult(Result, String) Declaration public void SetResult(Result resultState, string resultText) Parameters Type Name Description Result resultState System.String resultText Start() Declaration void Start()"
  },
  "api/SAMURAI.RiseStatue.html": {
    "href": "api/SAMURAI.RiseStatue.html",
    "title": "Class RiseStatue",
    "keywords": "Class RiseStatue 自由の女神が上がってきて倒れる動きの監視+実効 Inheritance System.Object RiseStatue Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class RiseStatue : MonoBehaviour Fields _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager Properties CurrentStatueMode 現在の自由の女神の状態 Declaration public StatueMode CurrentStatueMode { get; } Property Value Type Description StatueMode Methods RiseStatueCoroutine() Declaration IEnumerator RiseStatueCoroutine() Returns Type Description System.Collections.IEnumerator Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.SamuraiDebugger.html": {
    "href": "api/SAMURAI.SamuraiDebugger.html",
    "title": "Class SamuraiDebugger",
    "keywords": "Class SamuraiDebugger Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.EditorWindow SamuraiDebugger Inherited Members UnityEditor.EditorWindow.BeginWindows() UnityEditor.EditorWindow.EndWindows() UnityEditor.EditorWindow.OnResized() UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent) UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent, System.Double) UnityEditor.EditorWindow.RemoveNotification() UnityEditor.EditorWindow.ShowTab() UnityEditor.EditorWindow.Focus() UnityEditor.EditorWindow.ShowUtility() UnityEditor.EditorWindow.ShowPopup() UnityEditor.EditorWindow.ShowModalUtility() UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect, UnityEngine.Vector2) UnityEditor.EditorWindow.Show() UnityEditor.EditorWindow.Show(System.Boolean) UnityEditor.EditorWindow.ShowAuxWindow() UnityEditor.EditorWindow.ShowModal() UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean) UnityEditor.EditorWindow.GetWindow(System.Type) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, System.Boolean) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect) UnityEditor.EditorWindow.GetWindow<T>() UnityEditor.EditorWindow.GetWindow<T>(System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Boolean, System.String) UnityEditor.EditorWindow.GetWindow<T>(System.String) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Type[]) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Type[]) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Boolean, System.Type[]) UnityEditor.EditorWindow.CreateWindow<T>(System.Type[]) UnityEditor.EditorWindow.CreateWindow<T>(System.String, System.Type[]) UnityEditor.EditorWindow.HasOpenInstances<T>() UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type) UnityEditor.EditorWindow.FocusWindowIfItsOpen<T>() UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.Close() UnityEditor.EditorWindow.Repaint() UnityEditor.EditorWindow.SendEvent(UnityEngine.Event) UnityEditor.EditorWindow.GetExtraPaneTypes() UnityEditor.EditorWindow.rootVisualElement UnityEditor.EditorWindow.wantsMouseMove UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow UnityEditor.EditorWindow.autoRepaintOnSceneChange UnityEditor.EditorWindow.maximized UnityEditor.EditorWindow.focusedWindow UnityEditor.EditorWindow.mouseOverWindow UnityEditor.EditorWindow.minSize UnityEditor.EditorWindow.maxSize UnityEditor.EditorWindow.title UnityEditor.EditorWindow.titleContent UnityEditor.EditorWindow.depthBufferBits UnityEditor.EditorWindow.antiAlias UnityEditor.EditorWindow.position UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp-Editor.dll Syntax public class SamuraiDebugger : EditorWindow Fields _foldinglist Declaration bool _foldinglist Field Value Type Description System.Boolean _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager _gameManagerName Declaration string _gameManagerName Field Value Type Description System.String _gameState Declaration GameState _gameState Field Value Type Description GameState _stageNumber Declaration int _stageNumber Field Value Type Description System.Int32 _worldName Declaration WorldName _worldName Field Value Type Description WorldName Methods OnGUI() Declaration void OnGUI() ShowWindow() Declaration [MenuItem(\"Custom/SamuraiDebugger\")] static void ShowWindow()"
  },
  "api/SAMURAI.SamuraiWordBase.html": {
    "href": "api/SAMURAI.SamuraiWordBase.html",
    "title": "Class SamuraiWordBase",
    "keywords": "Class SamuraiWordBase Inheritance System.Object SamuraiWordBase Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class SamuraiWordBase : ScriptableObject Fields samuraiwords Declaration public List<string> samuraiwords Field Value Type Description System.Collections.Generic.List < System.String >"
  },
  "api/SAMURAI.SamuraiWordBaseEditor.html": {
    "href": "api/SAMURAI.SamuraiWordBaseEditor.html",
    "title": "Class SamuraiWordBaseEditor",
    "keywords": "Class SamuraiWordBaseEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor SamuraiWordBaseEditor Implements UnityEditor.IPreviewable UnityEditor.IToolModeOwner Inherited Members UnityEditor.Editor.HasLargeHeader() UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[], UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[], UnityEngine.Object) UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object, UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[], UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.GetSerializedObjectInternal() UnityEditor.Editor.InternalSetTargets(UnityEngine.Object[]) UnityEditor.Editor.UnityEditor.IToolModeOwner.GetWorldBoundsOfTargets() UnityEditor.Editor.GetWorldBoundsOfTarget(UnityEngine.Object) UnityEditor.Editor.UnityEditor.IToolModeOwner.ModeSurvivesSelectionChange(System.Int32) UnityEditor.Editor.OnForceReloadInspector() UnityEditor.Editor.GetOptimizedGUIBlock(System.Boolean, System.Boolean, System.Single) UnityEditor.Editor.OnOptimizedInspectorGUI(UnityEngine.Rect) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.Repaint() UnityEditor.Editor.CreateInspectorGUI() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.OnHeaderControlsGUI() UnityEditor.Editor.ShouldHideOpenButton() UnityEditor.Editor.OnHeaderIconGUI(UnityEngine.Rect) UnityEditor.Editor.OnHeaderTitleGUI(UnityEngine.Rect, System.String) UnityEditor.Editor.DrawHeaderHelpAndSettingsGUI(UnityEngine.Rect) UnityEditor.Editor.DrawFoldoutInspector(UnityEngine.Object, UnityEditor.Editor) UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.IsEnabled() UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.Initialize(UnityEngine.Object[]) UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.OnAssetStoreInspectorGUI() UnityEditor.Editor.UnityEditor.IToolModeOwner.GetInstanceID() UnityEditor.Editor.preview UnityEditor.Editor.UnityEditor.IToolModeOwner.areToolModesAvailable UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.referenceTargetIndex UnityEditor.Editor.targetTitle UnityEditor.Editor.serializedObject UnityEditor.Editor.finishedDefaultHeaderGUI UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp-Editor.dll Syntax [CustomEditor(typeof(SamuraiWordBase))] public class SamuraiWordBaseEditor : Editor, IPreviewable, IToolModeOwner Fields folding_list Declaration bool folding_list Field Value Type Description System.Boolean Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI() Implements UnityEditor.IPreviewable UnityEditor.IToolModeOwner"
  },
  "api/SAMURAI.SceneObject.html": {
    "href": "api/SAMURAI.SceneObject.html",
    "title": "Class SceneObject",
    "keywords": "Class SceneObject Inheritance System.Object SceneObject Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SceneObject Fields m_SceneName Declaration string m_SceneName Field Value Type Description System.String Operators Implicit(SceneObject to String) Declaration public static implicit operator string (SceneObject sceneObject) Parameters Type Name Description SceneObject sceneObject Returns Type Description System.String Implicit(String to SceneObject) Declaration public static implicit operator SceneObject(string sceneName) Parameters Type Name Description System.String sceneName Returns Type Description SceneObject"
  },
  "api/SAMURAI.SelectState.html": {
    "href": "api/SAMURAI.SelectState.html",
    "title": "Enum SelectState",
    "keywords": "Enum SelectState ステージ選択画面の状態 Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum SelectState Fields Name Description StagePreview StageSelect WorldSelect"
  },
  "api/SAMURAI.SelectStateInput.html": {
    "href": "api/SAMURAI.SelectStateInput.html",
    "title": "Class SelectStateInput",
    "keywords": "Class SelectStateInput Inheritance System.Object SelectStateInput Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class SelectStateInput : MonoBehaviour Fields _canTouchWorld Declaration bool _canTouchWorld Field Value Type Description System.Boolean _cinemachineBrain Declaration CinemachineBrain _cinemachineBrain Field Value Type Description Cinemachine.CinemachineBrain _focusWorld Declaration WorldName _focusWorld Field Value Type Description WorldName _selectStateManager Declaration SelectStateManager _selectStateManager Field Value Type Description SelectStateManager _virtualCameras Declaration List<CinemachineVirtualCamera> _virtualCameras Field Value Type Description System.Collections.Generic.List < Cinemachine.CinemachineVirtualCamera > bgm Declaration public StageSelectBGM bgm Field Value Type Description StageSelectBGM Properties CanTouchWorld Declaration public bool CanTouchWorld { get; } Property Value Type Description System.Boolean Methods ChangeCameraView(CinemachineVirtualCamera, Single) シーン内に存在するvirtualCameraと入力を比較してカメラの優先度を変更 Declaration public IEnumerator ChangeCameraView(CinemachineVirtualCamera virtualCamera, float delayTime) Parameters Type Name Description Cinemachine.CinemachineVirtualCamera virtualCamera System.Single delayTime 移動完了までの時間 Returns Type Description System.Collections.IEnumerator StagePreviewStateUpdate() SelectStateStateがStagePreviewStateのときの処理 Declaration public void StagePreviewStateUpdate() StageSelectStateUpdate() SelectStateStateがStageSelectStateのときの処理 Declaration public void StageSelectStateUpdate() Start() _virtualCamerasをシーン内から取得+必要なスクリプトの取得 Declaration void Start() WorldSelectStateUpdate() SelectStateStateがWorldSelectStateのときの処理 Declaration public void WorldSelectStateUpdate()"
  },
  "api/SAMURAI.SelectStateManager.html": {
    "href": "api/SAMURAI.SelectStateManager.html",
    "title": "Class SelectStateManager",
    "keywords": "Class SelectStateManager Inheritance System.Object SelectStateManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class SelectStateManager : MonoBehaviour Fields _imtStateMachine Declaration ImtStateMachine<SelectStateManager> _imtStateMachine Field Value Type Description ImtStateMachine < SelectStateManager > stageSelectCamera Declaration [NonSerialized] public SelectStateInput stageSelectCamera Field Value Type Description SelectStateInput Properties CurrentSelectState 現在のステージセレクト画面の状態 Declaration public SelectState CurrentSelectState { get; } Property Value Type Description SelectState Methods Awake() Declaration void Awake() Start() Declaration void Start() StateChangeSignal(SelectState) 任意のStateに変更するIdをステートマシンに送る Declaration public void StateChangeSignal(SelectState selectState) Parameters Type Name Description SelectState selectState Update() Declaration void Update()"
  },
  "api/SAMURAI.ShotObjectScript.html": {
    "href": "api/SAMURAI.ShotObjectScript.html",
    "title": "Class ShotObjectScript",
    "keywords": "Class ShotObjectScript Inheritance System.Object ShotObjectScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class ShotObjectScript : MonoBehaviour Fields gameManager Declaration GameManager gameManager Field Value Type Description GameManager groundWidth Declaration float groundWidth Field Value Type Description System.Single isEnd Declaration bool isEnd Field Value Type Description System.Boolean movedLength Declaration float movedLength Field Value Type Description System.Single ResultSceneName Declaration string ResultSceneName Field Value Type Description System.String velocity Declaration float velocity Field Value Type Description System.Single Methods BlowAway(GameObject) Declaration IEnumerator BlowAway(GameObject player) Parameters Type Name Description GameObject player Returns Type Description System.Collections.IEnumerator GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode GoResult() Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.SkinnedMeshCut.html": {
    "href": "api/SAMURAI.SkinnedMeshCut.html",
    "title": "Class SkinnedMeshCut",
    "keywords": "Class SkinnedMeshCut Inheritance System.Object SkinnedMeshCut Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class SkinnedMeshCut : MonoBehaviour Fields _backMeshData Declaration static SkinnedMeshCut.MeshData _backMeshData Field Value Type Description SkinnedMeshCut.MeshData _convertedVertices Declaration static Vector3[] _convertedVertices Field Value Type Description Vector3 [] _frontMeshData Declaration static SkinnedMeshCut.MeshData _frontMeshData Field Value Type Description SkinnedMeshCut.MeshData _isFront Declaration static bool[] _isFront Field Value Type Description System.Boolean [] _slashPlane Declaration static Plane _slashPlane Field Value Type Description Plane _targetBindPoses Declaration static Matrix4x4[] _targetBindPoses Field Value Type Description Matrix4x4 [] _targetBoneWeights Declaration static BoneWeight[] _targetBoneWeights Field Value Type Description BoneWeight [] _targetMesh Declaration static Mesh _targetMesh Field Value Type Description Mesh _targetNormals Declaration static Vector3[] _targetNormals Field Value Type Description Vector3 [] _targetUVs Declaration static Vector2[] _targetUVs Field Value Type Description Vector2 [] _targetVertices Declaration static Vector3[] _targetVertices Field Value Type Description Vector3 [] Methods CutMesh(SkinnedMeshRenderer, Vector3, Vector3) gameObjectを切断して2つのMeshにして返します. 1つ目のMeshが切断面の法線に対して表側, 2つ目が裏側です. 何度も切るようなオブジェクトでは Declaration public static Mesh[] CutMesh(SkinnedMeshRenderer target, Vector3 planeAnchorPoint, Vector3 planeNormalDirection) Parameters Type Name Description SkinnedMeshRenderer target 切断対象のgameObject Vector3 planeAnchorPoint 切断面上の1点 Vector3 planeNormalDirection 切断面の法線 Returns Type Description Mesh [] Sepalate(Boolean[], Int32[], Int32) Declaration static void Sepalate(bool[] sides, int[] vertexIndices, int submesh) Parameters Type Name Description System.Boolean [] sides System.Int32 [] vertexIndices System.Int32 submesh"
  },
  "api/SAMURAI.SkinnedMeshCut.MeshData.html": {
    "href": "api/SAMURAI.SkinnedMeshCut.MeshData.html",
    "title": "Class SkinnedMeshCut.MeshData",
    "keywords": "Class SkinnedMeshCut.MeshData Inheritance System.Object SkinnedMeshCut.MeshData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class MeshData Fields boneWeights Declaration public List<BoneWeight> boneWeights Field Value Type Description System.Collections.Generic.List < BoneWeight > normals Declaration public List<Vector3> normals Field Value Type Description System.Collections.Generic.List < Vector3 > subMeshIndices Declaration public List<List<int>> subMeshIndices Field Value Type Description System.Collections.Generic.List < System.Collections.Generic.List < System.Int32 >> trackedArray Declaration int[] trackedArray Field Value Type Description System.Int32 [] trackedVertexNum Declaration int trackedVertexNum Field Value Type Description System.Int32 trackNum Declaration int trackNum Field Value Type Description System.Int32 triangles Declaration public List<int> triangles Field Value Type Description System.Collections.Generic.List < System.Int32 > uvs Declaration public List<Vector2> uvs Field Value Type Description System.Collections.Generic.List < Vector2 > vertices Declaration public List<Vector3> vertices Field Value Type Description System.Collections.Generic.List < Vector3 > Methods AddTriangle(Int32, Int32, Int32, Int32) Declaration public void AddTriangle(int p1, int p2, int p3, int submeshNum) Parameters Type Name Description System.Int32 p1 System.Int32 p2 System.Int32 p3 System.Int32 submeshNum AddTriangle(Int32, Int32, Vector3, Vector3, Vector2, Int32) Declaration public void AddTriangle(int notCutIndex0, int notCutIndex1, Vector3 cutPoint, Vector3 normal, Vector2 uv, int submeshNum) Parameters Type Name Description System.Int32 notCutIndex0 System.Int32 notCutIndex1 Vector3 cutPoint Vector3 normal Vector2 uv System.Int32 submeshNum AddTriangle(Int32, Vector3, Vector3, Vector3[], Vector2[], Int32) Declaration public void AddTriangle(int notCutIndex, Vector3 cutPoint1, Vector3 cutPoint2, Vector3[] normals3, Vector2[] uvs3, int submeshNum) Parameters Type Name Description System.Int32 notCutIndex Vector3 cutPoint1 Vector3 cutPoint2 Vector3 [] normals3 Vector2 [] uvs3 System.Int32 submeshNum CheckIndex(Int32) Declaration bool CheckIndex(int target) Parameters Type Name Description System.Int32 target Returns Type Description System.Boolean ClearAll() Declaration public void ClearAll()"
  },
  "api/SAMURAI.Slash.html": {
    "href": "api/SAMURAI.Slash.html",
    "title": "Class Slash",
    "keywords": "Class Slash Inheritance System.Object Slash Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Slash : MonoBehaviour Fields alpha Declaration float alpha Field Value Type Description System.Single animator Declaration public Animator animator Field Value Type Description Animator particle Declaration ParticleSystem.MainModule particle Field Value Type Description ParticleSystem.MainModule slash Declaration public AudioClip slash Field Value Type Description AudioClip time Declaration float time Field Value Type Description System.Single Methods OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.slidepad.Boundy.html": {
    "href": "api/SAMURAI.slidepad.Boundy.html",
    "title": "Struct slidepad.Boundy",
    "keywords": "Struct slidepad.Boundy Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax struct Boundy Constructors Boundy(Single, Single, Single, Single) Declaration public Boundy(float xmin, float xmax, float zmin, float zmax) Parameters Type Name Description System.Single xmin System.Single xmax System.Single zmin System.Single zmax Fields x_max Declaration public float x_max Field Value Type Description System.Single x_min Declaration public float x_min Field Value Type Description System.Single z_max Declaration public float z_max Field Value Type Description System.Single z_min Declaration public float z_min Field Value Type Description System.Single"
  },
  "api/SAMURAI.slidepad.html": {
    "href": "api/SAMURAI.slidepad.html",
    "title": "Class slidepad",
    "keywords": "Class slidepad Inheritance System.Object slidepad Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class slidepad : MonoBehaviour Fields boundy Declaration slidepad.Boundy boundy Field Value Type Description slidepad.Boundy fingerID Declaration int fingerID Field Value Type Description System.Int32 flagsParent Declaration public Transform flagsParent Field Value Type Description Transform isdragged Declaration bool isdragged Field Value Type Description System.Boolean joyrect Declaration RectTransform joyrect Field Value Type Description RectTransform joystartposition Declaration Vector2 joystartposition Field Value Type Description Vector2 joystick Declaration public GameObject joystick Field Value Type Description GameObject player Declaration public GameObject player Field Value Type Description GameObject playerrig Declaration Rigidbody playerrig Field Value Type Description Rigidbody radius Declaration float radius Field Value Type Description System.Single scale Declaration float scale Field Value Type Description System.Single slidestartposition Declaration Vector2 slidestartposition Field Value Type Description Vector2 speed Declaration public float speed Field Value Type Description System.Single state Declaration GameState state Field Value Type Description GameState velocity Declaration Vector2 velocity Field Value Type Description Vector2 Methods CheckBoundy(Vector3, ref Vector3) Declaration void CheckBoundy(Vector3 pos, ref Vector3 dir) Parameters Type Name Description Vector3 pos Vector3 dir Controller(Vector2) Declaration void Controller(Vector2 dir) Parameters Type Name Description Vector2 dir DragEnd() Declaration public void DragEnd() DragStart(BaseEventData) Declaration public void DragStart(BaseEventData baseEventData) Parameters Type Name Description BaseEventData baseEventData FindFinger() Declaration Touch FindFinger() Returns Type Description Touch LateUpdate() Declaration void LateUpdate() Move(Vector2) Declaration void Move(Vector2 dir) Parameters Type Name Description Vector2 dir PlayingState() Declaration void PlayingState() SetBoundy() Declaration void SetBoundy() Start() Declaration void Start() SwitchState(StateChangedArg) Declaration void SwitchState(StateChangedArg a) Parameters Type Name Description StateChangedArg a"
  },
  "api/SAMURAI.Snow.html": {
    "href": "api/SAMURAI.Snow.html",
    "title": "Class Snow",
    "keywords": "Class Snow Inheritance System.Object Snow Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Snow : MonoBehaviour Fields audioSource Declaration public AudioSource audioSource Field Value Type Description AudioSource beforePoint Declaration Vector3 beforePoint Field Value Type Description Vector3 damage Declaration float damage Field Value Type Description System.Single gameover Declaration public Image gameover Field Value Type Description Image gm Declaration public GameManager gm Field Value Type Description GameManager mainCamera Declaration public Transform mainCamera Field Value Type Description Transform pad Declaration public slidepad pad Field Value Type Description slidepad particle Declaration public ParticleSystem particle Field Value Type Description ParticleSystem samurai Declaration public Transform samurai Field Value Type Description Transform snow Declaration public Transform snow Field Value Type Description Transform Methods GameOver() Declaration IEnumerator GameOver() Returns Type Description System.Collections.IEnumerator GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode OnStateCanged(StateChangedArg) Declaration void OnStateCanged(StateChangedArg e) Parameters Type Name Description StateChangedArg e Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.StageData.html": {
    "href": "api/SAMURAI.StageData.html",
    "title": "Class StageData",
    "keywords": "Class StageData Inheritance System.Object StageData Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageData : MonoBehaviour Fields _stageNumber Declaration int _stageNumber Field Value Type Description System.Int32 _stageState Declaration StageState _stageState Field Value Type Description StageState _worldName Declaration WorldName _worldName Field Value Type Description WorldName Properties StageNumber Declaration public int StageNumber { get; } Property Value Type Description System.Int32 StageState Declaration public StageState StageState { get; set; } Property Value Type Description StageState WorldName Declaration public WorldName WorldName { get; } Property Value Type Description WorldName Methods ToBaseStageData() Declaration public BaseStageData ToBaseStageData() Returns Type Description BaseStageData"
  },
  "api/SAMURAI.StageDataHolder.html": {
    "href": "api/SAMURAI.StageDataHolder.html",
    "title": "Class StageDataHolder",
    "keywords": "Class StageDataHolder Inheritance System.Object StageDataHolder Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageDataHolder : MonoBehaviour Fields nowStageData Declaration static BaseStageData nowStageData Field Value Type Description BaseStageData Methods GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode SetStageData(BaseStageData) Declaration public void SetStageData(BaseStageData stageData) Parameters Type Name Description BaseStageData stageData"
  },
  "api/SAMURAI.StageDataManager.html": {
    "href": "api/SAMURAI.StageDataManager.html",
    "title": "Class StageDataManager",
    "keywords": "Class StageDataManager Inheritance System.Object StageDataManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageDataManager : MonoBehaviour Fields TargetObjects Declaration GameObject[] TargetObjects Field Value Type Description GameObject [] Methods Awake() すべてのステージを検索し、状態管理する Declaration void Awake() LoadStageData() どのワールドの何番目のステージまでクリアしたのかを取得し、それをStageData型で返す Declaration public static BaseStageData LoadStageData() Returns Type Description BaseStageData SaveStageData(BaseStageData) ステージクリア時などにクリアしたステージ番号をセーブする(ただし新しいステージをクリアしたときのみ) Declaration public static void SaveStageData(BaseStageData stageData) Parameters Type Name Description BaseStageData stageData SaveするStageData"
  },
  "api/SAMURAI.StageDataReceiver.html": {
    "href": "api/SAMURAI.StageDataReceiver.html",
    "title": "Interface StageDataReceiver",
    "keywords": "Interface StageDataReceiver Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public interface StageDataReceiver Methods StageDataReceive(BaseStageData) Declaration void StageDataReceive(BaseStageData stageData) Parameters Type Name Description BaseStageData stageData"
  },
  "api/SAMURAI.StageDataSave.html": {
    "href": "api/SAMURAI.StageDataSave.html",
    "title": "Class StageDataSave",
    "keywords": "Class StageDataSave Inheritance System.Object StageDataSave Implements StageDataReceiver Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageDataSave : MonoBehaviour, StageDataReceiver Methods Save(BaseStageData) Declaration IEnumerator Save(BaseStageData stageData) Parameters Type Name Description BaseStageData stageData Returns Type Description System.Collections.IEnumerator StageDataReceive(BaseStageData) Declaration public void StageDataReceive(BaseStageData stageData) Parameters Type Name Description BaseStageData stageData Implements StageDataReceiver"
  },
  "api/SAMURAI.StageIcon.html": {
    "href": "api/SAMURAI.StageIcon.html",
    "title": "Class StageIcon",
    "keywords": "Class StageIcon Inheritance System.Object StageIcon Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageIcon : MonoBehaviour Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.StageIconButton.html": {
    "href": "api/SAMURAI.StageIconButton.html",
    "title": "Class StageIconButton",
    "keywords": "Class StageIconButton Inheritance System.Object StageIconButton Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageIconButton : MonoBehaviour Fields _stageData Declaration StageData _stageData Field Value Type Description StageData gameScene Declaration SceneObject gameScene Field Value Type Description SceneObject indexOfButton Declaration public int indexOfButton Field Value Type Description System.Int32 preview Declaration public GameObject preview Field Value Type Description GameObject stageName Declaration string stageName Field Value Type Description System.String stageSelectMng Declaration public StageSelectManager stageSelectMng Field Value Type Description StageSelectManager stageSummary Declaration string stageSummary Field Value Type Description System.String stImage Declaration Sprite stImage Field Value Type Description Sprite Methods DataSet() Declaration void DataSet() OnClick() Declaration public void OnClick() Start() Declaration void Start()"
  },
  "api/SAMURAI.StagePrefabManager.html": {
    "href": "api/SAMURAI.StagePrefabManager.html",
    "title": "Class StagePrefabManager",
    "keywords": "Class StagePrefabManager Inheritance System.Object StagePrefabManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StagePrefabManager : MonoBehaviour Fields crowdMaterial Declaration public Material crowdMaterial Field Value Type Description Material crowdRenderers Declaration public Renderer[] crowdRenderers Field Value Type Description Renderer [] crowdTextures Declaration public Texture[] crowdTextures Field Value Type Description Texture [] flagRenderers Declaration public MeshRenderer[] flagRenderers Field Value Type Description MeshRenderer [] flagShader Declaration public Shader flagShader Field Value Type Description Shader flagTexture Declaration public Texture flagTexture Field Value Type Description Texture groundMaterial Declaration public Material groundMaterial Field Value Type Description Material groundNormalMap Declaration public Texture groundNormalMap Field Value Type Description Texture groundRenderer Declaration public Renderer groundRenderer Field Value Type Description Renderer groundTexture Declaration public Texture groundTexture Field Value Type Description Texture lookAtSpeed Declaration public float lookAtSpeed Field Value Type Description System.Single refereeArea Declaration public RefereeArea refereeArea Field Value Type Description RefereeArea refereeAreaSize Declaration public int refereeAreaSize Field Value Type Description System.Int32 refereeMaxAng Declaration public int refereeMaxAng Field Value Type Description System.Int32 refereeMove Declaration public RefereeMove refereeMove Field Value Type Description RefereeMove runningSpeed Declaration public float runningSpeed Field Value Type Description System.Single useObstacles Declaration public bool useObstacles Field Value Type Description System.Boolean Methods Start() Declaration void Start()"
  },
  "api/SAMURAI.StagePrefabManagerEditor.html": {
    "href": "api/SAMURAI.StagePrefabManagerEditor.html",
    "title": "Class StagePrefabManagerEditor",
    "keywords": "Class StagePrefabManagerEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor StagePrefabManagerEditor Implements UnityEditor.IPreviewable UnityEditor.IToolModeOwner Inherited Members UnityEditor.Editor.HasLargeHeader() UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[], UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[], UnityEngine.Object) UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object, UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[], UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.GetSerializedObjectInternal() UnityEditor.Editor.InternalSetTargets(UnityEngine.Object[]) UnityEditor.Editor.UnityEditor.IToolModeOwner.GetWorldBoundsOfTargets() UnityEditor.Editor.GetWorldBoundsOfTarget(UnityEngine.Object) UnityEditor.Editor.UnityEditor.IToolModeOwner.ModeSurvivesSelectionChange(System.Int32) UnityEditor.Editor.OnForceReloadInspector() UnityEditor.Editor.GetOptimizedGUIBlock(System.Boolean, System.Boolean, System.Single) UnityEditor.Editor.OnOptimizedInspectorGUI(UnityEngine.Rect) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.Repaint() UnityEditor.Editor.CreateInspectorGUI() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.OnHeaderControlsGUI() UnityEditor.Editor.ShouldHideOpenButton() UnityEditor.Editor.OnHeaderIconGUI(UnityEngine.Rect) UnityEditor.Editor.OnHeaderTitleGUI(UnityEngine.Rect, System.String) UnityEditor.Editor.DrawHeaderHelpAndSettingsGUI(UnityEngine.Rect) UnityEditor.Editor.DrawFoldoutInspector(UnityEngine.Object, UnityEditor.Editor) UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.IsEnabled() UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.Initialize(UnityEngine.Object[]) UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.OnAssetStoreInspectorGUI() UnityEditor.Editor.UnityEditor.IToolModeOwner.GetInstanceID() UnityEditor.Editor.preview UnityEditor.Editor.UnityEditor.IToolModeOwner.areToolModesAvailable UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.referenceTargetIndex UnityEditor.Editor.targetTitle UnityEditor.Editor.serializedObject UnityEditor.Editor.finishedDefaultHeaderGUI UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp-Editor.dll Syntax [CustomEditor(typeof(StagePrefabManager))] public class StagePrefabManagerEditor : Editor, IPreviewable, IToolModeOwner Fields _isOpen Declaration bool _isOpen Field Value Type Description System.Boolean _num Declaration int _num Field Value Type Description System.Int32 _target Declaration StagePrefabManager _target Field Value Type Description StagePrefabManager _textures Declaration Texture[] _textures Field Value Type Description Texture [] crowd Declaration bool crowd Field Value Type Description System.Boolean useNormalMap Declaration bool useNormalMap Field Value Type Description System.Boolean Methods Awake() Declaration void Awake() OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI() Implements UnityEditor.IPreviewable UnityEditor.IToolModeOwner"
  },
  "api/SAMURAI.StagePreviewState.html": {
    "href": "api/SAMURAI.StagePreviewState.html",
    "title": "Class StagePreviewState",
    "keywords": "Class StagePreviewState Inheritance System.Object StagePreviewState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StagePreviewState : ImtStateMachine<SelectStateManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.StagePreviwScript.html": {
    "href": "api/SAMURAI.StagePreviwScript.html",
    "title": "Class StagePreviwScript",
    "keywords": "Class StagePreviwScript Inheritance System.Object StagePreviwScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StagePreviwScript : MonoBehaviour Fields baseStageData Declaration BaseStageData baseStageData Field Value Type Description BaseStageData gameScene Declaration SceneObject gameScene Field Value Type Description SceneObject isPreview Declaration bool isPreview Field Value Type Description System.Boolean nameText Declaration public Text nameText Field Value Type Description Text stageImage Declaration public GameObject stageImage Field Value Type Description GameObject stageSelectMng Declaration public StageSelectManager stageSelectMng Field Value Type Description StageSelectManager summaryText Declaration public Text summaryText Field Value Type Description Text Methods GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode OnClickClose() Declaration public void OnClickClose() OnClickStart() Declaration public void OnClickStart() previewDisplay(String, String, Sprite, SceneObject, BaseStageData) Declaration public void previewDisplay(string stageName, string summary, Sprite image, SceneObject scene, BaseStageData baseStageData) Parameters Type Name Description System.String stageName System.String summary Sprite image SceneObject scene BaseStageData baseStageData Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.StageSelect.html": {
    "href": "api/SAMURAI.StageSelect.html",
    "title": "Class StageSelect",
    "keywords": "Class StageSelect Inheritance System.Object StageSelect Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax [Serializable] public class StageSelect Fields fieldNumber Declaration public int fieldNumber Field Value Type Description System.Int32 gameScene Declaration public SceneObject gameScene Field Value Type Description SceneObject name Declaration public string name Field Value Type Description System.String oppnentName Declaration public string oppnentName Field Value Type Description System.String previewName Declaration public string previewName Field Value Type Description System.String stageImage Declaration public Sprite stageImage Field Value Type Description Sprite summary Declaration public string summary Field Value Type Description System.String"
  },
  "api/SAMURAI.StageSelectBGM.html": {
    "href": "api/SAMURAI.StageSelectBGM.html",
    "title": "Class StageSelectBGM",
    "keywords": "Class StageSelectBGM ステージセレクトのBGMを監理。 Inheritance System.Object StageSelectBGM Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageSelectBGM : MonoBehaviour Fields cn Declaration AudioSource cn Field Value Type Description AudioSource current Declaration WorldName current Field Value Type Description WorldName gb Declaration AudioSource gb Field Value Type Description AudioSource isNotCleared Declaration bool isNotCleared Field Value Type Description System.Boolean jp Declaration AudioSource jp Field Value Type Description AudioSource ru Declaration AudioSource ru Field Value Type Description AudioSource start Declaration AudioSource start Field Value Type Description AudioSource us Declaration AudioSource us Field Value Type Description AudioSource Methods ChangeBGM(WorldName, Single) Declaration public void ChangeBGM(WorldName next, float delayTime) Parameters Type Name Description WorldName next System.Single delayTime FadeIn(AudioSource, Single) Declaration IEnumerator FadeIn(AudioSource source, float delayTime) Parameters Type Name Description AudioSource source System.Single delayTime Returns Type Description System.Collections.IEnumerator FadeOut(AudioSource, Single) Declaration IEnumerator FadeOut(AudioSource source, float delayTime) Parameters Type Name Description AudioSource source System.Single delayTime Returns Type Description System.Collections.IEnumerator Start() Declaration void Start()"
  },
  "api/SAMURAI.StageSelectData.html": {
    "href": "api/SAMURAI.StageSelectData.html",
    "title": "Class StageSelectData",
    "keywords": "Class StageSelectData Inheritance System.Object StageSelectData Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageSelectData : ScriptableObject Fields stageSelectList Declaration public List<StageSelect> stageSelectList Field Value Type Description System.Collections.Generic.List < StageSelect >"
  },
  "api/SAMURAI.StageSelectManager.html": {
    "href": "api/SAMURAI.StageSelectManager.html",
    "title": "Class StageSelectManager",
    "keywords": "Class StageSelectManager Inheritance System.Object StageSelectManager Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageSelectManager : MonoBehaviour Fields canvas Declaration public GameObject canvas Field Value Type Description GameObject prefabButton Declaration public GameObject prefabButton Field Value Type Description GameObject stagePreview Declaration public GameObject stagePreview Field Value Type Description GameObject stagePreviwScript Declaration StagePreviwScript stagePreviwScript Field Value Type Description StagePreviwScript stageSelect Declaration StageSelect stageSelect Field Value Type Description StageSelect stageSelectData Declaration public StageSelectData stageSelectData Field Value Type Description StageSelectData state Declaration public StageSelectManager.StageSelectState state Field Value Type Description StageSelectManager.StageSelectState Methods ButtonDataSet(Int32) Declaration public (string stName, string summary, Sprite stagePreview, SceneObject scene) ButtonDataSet(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.ValueTuple < System.String , System.String , Sprite , SceneObject > previewState(String, String, Sprite, SceneObject, BaseStageData) Declaration public void previewState(string stageName, string summary, Sprite stImage, SceneObject gameScene, BaseStageData baseStageData) Parameters Type Name Description System.String stageName System.String summary Sprite stImage SceneObject gameScene BaseStageData baseStageData selectState() Declaration public void selectState() Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.StageSelectManager.StageSelectState.html": {
    "href": "api/SAMURAI.StageSelectManager.StageSelectState.html",
    "title": "Enum StageSelectManager.StageSelectState",
    "keywords": "Enum StageSelectManager.StageSelectState いまはStageSelectManagerにつけてるけど、適当なオブジェクトにつけて、オブジェクトを適切につければ動くよ Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum StageSelectState Fields Name Description preview select"
  },
  "api/SAMURAI.StageSelectState.html": {
    "href": "api/SAMURAI.StageSelectState.html",
    "title": "Class StageSelectState",
    "keywords": "Class StageSelectState Inheritance System.Object StageSelectState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StageSelectState : ImtStateMachine<SelectStateManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.StageState.html": {
    "href": "api/SAMURAI.StageState.html",
    "title": "Enum StageState",
    "keywords": "Enum StageState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum StageState Fields Name Description Cleared NotPlayable Playable"
  },
  "api/SAMURAI.StandardFade.html": {
    "href": "api/SAMURAI.StandardFade.html",
    "title": "Class StandardFade",
    "keywords": "Class StandardFade 他のタイプにも対応したいが、現状はTextのみ対応 Inheritance System.Object StandardFade Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StandardFade : MonoBehaviour Methods FadeIn(TextMeshProUGUI, Int32) テキストをフェードイン Declaration public static Task FadeIn(TextMeshProUGUI text, int FadeLength) Parameters Type Name Description TMPro.TextMeshProUGUI text フェードインする対象 System.Int32 FadeLength Returns Type Description System.Threading.Tasks.Task FadeOut(TextMeshProUGUI, Int32) テキストをフェードアウト Declaration public static Task FadeOut(TextMeshProUGUI text, int FadeLength) Parameters Type Name Description TMPro.TextMeshProUGUI text フェードアウトする対象 System.Int32 FadeLength フェード全体の秒数 Returns Type Description System.Threading.Tasks.Task SetColor(TextMeshProUGUI, Single) colorのα値をセットする Declaration static void SetColor(TextMeshProUGUI text, float alpha) Parameters Type Name Description TMPro.TextMeshProUGUI text System.Single alpha"
  },
  "api/SAMURAI.StandbyState.html": {
    "href": "api/SAMURAI.StandbyState.html",
    "title": "Class StandbyState",
    "keywords": "Class StandbyState Inheritance System.Object StandbyState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StandbyState : ImtStateMachine<GameManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "api/SAMURAI.StandbyStateProcess.html": {
    "href": "api/SAMURAI.StandbyStateProcess.html",
    "title": "Class StandbyStateProcess",
    "keywords": "Class StandbyStateProcess Inheritance System.Object StandbyStateProcess Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StandbyStateProcess : MonoBehaviour Fields _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager _opponentInfoText Declaration TextMeshProUGUI _opponentInfoText Field Value Type Description TMPro.TextMeshProUGUI audioSource Declaration public AudioSource audioSource Field Value Type Description AudioSource katana Declaration public AudioClip katana Field Value Type Description AudioClip whistle Declaration public AudioClip whistle Field Value Type Description AudioClip Properties OpponentInfo Declaration public static string OpponentInfo { get; set; } Property Value Type Description System.String Methods StandbyProcessContent(StateChangedArg) 試合開始の演出(StartSignTextのフェードとStateの移動)を行う Declaration public void StandbyProcessContent(StateChangedArg stateChangedArg) Parameters Type Name Description StateChangedArg stateChangedArg Start() Declaration void Start()"
  },
  "api/SAMURAI.StartCoroutineForPlayingState.html": {
    "href": "api/SAMURAI.StartCoroutineForPlayingState.html",
    "title": "Class StartCoroutineForPlayingState",
    "keywords": "Class StartCoroutineForPlayingState Inheritance System.Object StartCoroutineForPlayingState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StartCoroutineForPlayingState : MonoBehaviour Fields _gameManager Declaration GameManager _gameManager Field Value Type Description GameManager taskEnumerators Declaration static List<IEnumerator> taskEnumerators Field Value Type Description System.Collections.Generic.List < System.Collections.IEnumerator > taskWaitTime Declaration static Dictionary<IEnumerator, float> taskWaitTime Field Value Type Description System.Collections.Generic.Dictionary < System.Collections.IEnumerator , System.Single > Methods AddTaskIEnumrator(IEnumerator) IEnumeratorを追加してコルーチンっぽく処理する ○○秒待ちたいときはyeild return 秒数(float型)でその秒数待つ Declaration public static void AddTaskIEnumrator(IEnumerator enumerator) Parameters Type Name Description System.Collections.IEnumerator enumerator 処理してほしいIEnumerator Start() Declaration public void Start() Update() Declaration public void Update()"
  },
  "api/SAMURAI.StateChangedArg.html": {
    "href": "api/SAMURAI.StateChangedArg.html",
    "title": "Class StateChangedArg",
    "keywords": "Class StateChangedArg Inheritance System.Object System.EventArgs StateChangedArg Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StateChangedArg : EventArgs Constructors StateChangedArg(GameState) Declaration public StateChangedArg(GameState state) Parameters Type Name Description GameState state Fields gameState Declaration public GameState gameState Field Value Type Description GameState"
  },
  "api/SAMURAI.StateChangedHandler.html": {
    "href": "api/SAMURAI.StateChangedHandler.html",
    "title": "Delegate StateChangedHandler",
    "keywords": "Delegate StateChangedHandler Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public delegate void StateChangedHandler(StateChangedArg arg); Parameters Type Name Description StateChangedArg arg"
  },
  "api/SAMURAI.StatueMode.html": {
    "href": "api/SAMURAI.StatueMode.html",
    "title": "Enum StatueMode",
    "keywords": "Enum StatueMode 自由の女神の状態 Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum StatueMode Fields Name Description FallDown Idle Rise"
  },
  "api/SAMURAI.StrikeObjectScript.html": {
    "href": "api/SAMURAI.StrikeObjectScript.html",
    "title": "Class StrikeObjectScript",
    "keywords": "Class StrikeObjectScript Inheritance System.Object StrikeObjectScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class StrikeObjectScript : MonoBehaviour Fields elapsedTime Declaration float elapsedTime Field Value Type Description System.Single emergencySign Declaration public GameObject emergencySign Field Value Type Description GameObject gameManager Declaration public GameManager gameManager Field Value Type Description GameManager shotInterval Declaration public float shotInterval Field Value Type Description System.Single ShotObject Declaration public GameObject ShotObject Field Value Type Description GameObject shotPosZ Declaration float[] shotPosZ Field Value Type Description System.Single [] Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.SugiTemp.html": {
    "href": "api/SAMURAI.SugiTemp.html",
    "title": "Class SugiTemp",
    "keywords": "Class SugiTemp Inheritance System.Object SugiTemp Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class SugiTemp : MonoBehaviour Fields renderer Declaration MeshRenderer renderer Field Value Type Description MeshRenderer shader Declaration Shader shader Field Value Type Description Shader texture Declaration Texture texture Field Value Type Description Texture Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.SwitchCPU.html": {
    "href": "api/SAMURAI.SwitchCPU.html",
    "title": "Class SwitchCPU",
    "keywords": "Class SwitchCPU Inheritance System.Object SwitchCPU Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class SwitchCPU : MonoBehaviour Fields gameObjectsAndWeight Declaration public SwitchCPU.WeightSet[] gameObjectsAndWeight Field Value Type Description SwitchCPU.WeightSet [] Methods Start() Declaration void Start()"
  },
  "api/SAMURAI.SwitchCPU.WeightSet.html": {
    "href": "api/SAMURAI.SwitchCPU.WeightSet.html",
    "title": "Struct SwitchCPU.WeightSet",
    "keywords": "Struct SwitchCPU.WeightSet Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax [Serializable] public struct WeightSet Fields gameObject Declaration public GameObject gameObject Field Value Type Description GameObject weight Declaration public float weight Field Value Type Description System.Single"
  },
  "api/SAMURAI.Sword.html": {
    "href": "api/SAMURAI.Sword.html",
    "title": "Class Sword",
    "keywords": "Class Sword Inheritance System.Object Sword Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Sword : MonoBehaviour Methods OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.TargetWorldData.html": {
    "href": "api/SAMURAI.TargetWorldData.html",
    "title": "Class TargetWorldData",
    "keywords": "Class TargetWorldData Inheritance System.Object TargetWorldData Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class TargetWorldData : MonoBehaviour Fields _cameraDistance Declaration float _cameraDistance Field Value Type Description System.Single _worldName Declaration WorldName _worldName Field Value Type Description WorldName Properties CameraDistance Declaration public float CameraDistance { get; } Property Value Type Description System.Single WorldName Declaration public WorldName WorldName { get; } Property Value Type Description WorldName Methods Start() Declaration void Start()"
  },
  "api/SAMURAI.Team.html": {
    "href": "api/SAMURAI.Team.html",
    "title": "Class Team",
    "keywords": "Class Team Inheritance System.Object Team Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Team Fields member Declaration public List<PersonalStatus> member Field Value Type Description System.Collections.Generic.List < PersonalStatus >"
  },
  "api/SAMURAI.TeamMaker.html": {
    "href": "api/SAMURAI.TeamMaker.html",
    "title": "Class TeamMaker",
    "keywords": "Class TeamMaker Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.EditorWindow TeamMaker Inherited Members UnityEditor.EditorWindow.BeginWindows() UnityEditor.EditorWindow.EndWindows() UnityEditor.EditorWindow.OnResized() UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent) UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent, System.Double) UnityEditor.EditorWindow.RemoveNotification() UnityEditor.EditorWindow.ShowTab() UnityEditor.EditorWindow.Focus() UnityEditor.EditorWindow.ShowUtility() UnityEditor.EditorWindow.ShowPopup() UnityEditor.EditorWindow.ShowModalUtility() UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect, UnityEngine.Vector2) UnityEditor.EditorWindow.Show() UnityEditor.EditorWindow.Show(System.Boolean) UnityEditor.EditorWindow.ShowAuxWindow() UnityEditor.EditorWindow.ShowModal() UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindow(System.Type, System.Boolean) UnityEditor.EditorWindow.GetWindow(System.Type) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, System.Boolean) UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect) UnityEditor.EditorWindow.GetWindow<T>() UnityEditor.EditorWindow.GetWindow<T>(System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Boolean, System.String) UnityEditor.EditorWindow.GetWindow<T>(System.String) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.GetWindow<T>(System.Type[]) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Type[]) UnityEditor.EditorWindow.GetWindow<T>(System.String, System.Boolean, System.Type[]) UnityEditor.EditorWindow.CreateWindow<T>(System.Type[]) UnityEditor.EditorWindow.CreateWindow<T>(System.String, System.Type[]) UnityEditor.EditorWindow.HasOpenInstances<T>() UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type) UnityEditor.EditorWindow.FocusWindowIfItsOpen<T>() UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean, System.String) UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, System.Boolean, System.String, System.Boolean) UnityEditor.EditorWindow.Close() UnityEditor.EditorWindow.Repaint() UnityEditor.EditorWindow.SendEvent(UnityEngine.Event) UnityEditor.EditorWindow.GetExtraPaneTypes() UnityEditor.EditorWindow.rootVisualElement UnityEditor.EditorWindow.wantsMouseMove UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow UnityEditor.EditorWindow.autoRepaintOnSceneChange UnityEditor.EditorWindow.maximized UnityEditor.EditorWindow.focusedWindow UnityEditor.EditorWindow.mouseOverWindow UnityEditor.EditorWindow.minSize UnityEditor.EditorWindow.maxSize UnityEditor.EditorWindow.title UnityEditor.EditorWindow.titleContent UnityEditor.EditorWindow.depthBufferBits UnityEditor.EditorWindow.antiAlias UnityEditor.EditorWindow.position UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : SAMURAI Assembly : Assembly-CSharp-Editor.dll Syntax public class TeamMaker : EditorWindow Fields ally Declaration bool ally Field Value Type Description System.Boolean generate_num Declaration int generate_num Field Value Type Description System.Int32 max_fast Declaration float max_fast Field Value Type Description System.Single max_hp Declaration float max_hp Field Value Type Description System.Single max_power Declaration float max_power Field Value Type Description System.Single max_seelen Declaration float max_seelen Field Value Type Description System.Single min_fast Declaration float min_fast Field Value Type Description System.Single min_hp Declaration float min_hp Field Value Type Description System.Single min_power Declaration float min_power Field Value Type Description System.Single min_seelen Declaration float min_seelen Field Value Type Description System.Single path_name Declaration string path_name Field Value Type Description System.String pos Declaration Vector2 pos Field Value Type Description Vector2 team Declaration Team team Field Value Type Description Team Methods Delete(PersonalStatus) Declaration void Delete(PersonalStatus member) Parameters Type Name Description PersonalStatus member Generate() Declaration void Generate() LoadTeam() Declaration void LoadTeam() OnGUI() Declaration void OnGUI() OpenWindow() Declaration [MenuItem(\"Custom/TeamMaker\")] static void OpenWindow() SaveTeam() Declaration void SaveTeam()"
  },
  "api/SAMURAI.test.html": {
    "href": "api/SAMURAI.test.html",
    "title": "Class test",
    "keywords": "Class test Inheritance System.Object test Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class test : MonoBehaviour Fields alpha Declaration float alpha Field Value Type Description System.Single banishrate Declaration public float banishrate Field Value Type Description System.Single particle Declaration ParticleSystem.MainModule particle Field Value Type Description ParticleSystem.MainModule time Declaration float time Field Value Type Description System.Single Methods OnCollisionEnter(Collision) Declaration void OnCollisionEnter(Collision collision) Parameters Type Name Description Collision collision OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.test_StageDataHolder.html": {
    "href": "api/SAMURAI.test_StageDataHolder.html",
    "title": "Class test_StageDataHolder",
    "keywords": "Class test_StageDataHolder Inheritance System.Object test_StageDataHolder Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class test_StageDataHolder : MonoBehaviour Methods Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.TimerScript.html": {
    "href": "api/SAMURAI.TimerScript.html",
    "title": "Class TimerScript",
    "keywords": "Class TimerScript Inheritance System.Object TimerScript Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class TimerScript : MonoBehaviour Fields audioSource Declaration AudioSource audioSource Field Value Type Description AudioSource displayText Declaration public GameObject displayText Field Value Type Description GameObject elapsedTime Declaration public float elapsedTime Field Value Type Description System.Single end Declaration bool end Field Value Type Description System.Boolean finishSound Declaration AudioClip finishSound Field Value Type Description AudioClip gameManager Declaration public GameManager gameManager Field Value Type Description GameManager limitTime Declaration public float limitTime Field Value Type Description System.Single playing Declaration public bool playing Field Value Type Description System.Boolean ResultSceneName Declaration string ResultSceneName Field Value Type Description System.String timeText Declaration public Text timeText Field Value Type Description Text Methods Awake() Declaration void Awake() GameSceneLoaded(Scene, LoadSceneMode) Declaration void GameSceneLoaded(Scene next, LoadSceneMode mode) Parameters Type Name Description Scene next LoadSceneMode mode GoResult() Declaration IEnumerator GoResult() Returns Type Description System.Collections.IEnumerator isTimeUp() Declaration public bool isTimeUp() Returns Type Description System.Boolean Pause() Declaration public void Pause() Playing() Declaration public void Playing() Reset() Declaration public void Reset() setTimer(Int32) Declaration public void setTimer(int sec) Parameters Type Name Description System.Int32 sec Start() Declaration void Start() Timer(StateChangedArg) Declaration public void Timer(StateChangedArg stateChangedArg) Parameters Type Name Description StateChangedArg stateChangedArg Update() Declaration void Update()"
  },
  "api/SAMURAI.UnityEngine.UI.html": {
    "href": "api/SAMURAI.UnityEngine.UI.html",
    "title": "Namespace SAMURAI.UnityEngine.UI",
    "keywords": "Namespace SAMURAI.UnityEngine.UI Classes LetterSpacing"
  },
  "api/SAMURAI.UnityEngine.UI.LetterSpacing.html": {
    "href": "api/SAMURAI.UnityEngine.UI.LetterSpacing.html",
    "title": "Class LetterSpacing",
    "keywords": "Class LetterSpacing Inheritance System.Object LetterSpacing Namespace : SAMURAI.UnityEngine.UI Assembly : Assembly-CSharp.dll Syntax public class LetterSpacing : BaseMeshEffect Constructors LetterSpacing() Declaration protected LetterSpacing() Fields m_spacing Declaration float m_spacing Field Value Type Description System.Single SupportedTagRegexPattersn Declaration const string SupportedTagRegexPattersn = \"<b>|</b>|<i>|</i>|<size=.*?>|</size>|<color=.*?>|</color>|<material=.*?>|</material>\" Field Value Type Description System.String useRichText Declaration bool useRichText Field Value Type Description System.Boolean Properties spacing Declaration public float spacing { get; set; } Property Value Type Description System.Single Methods GetRegexMatchedTagCollection(String, out Int32) Declaration IEnumerator GetRegexMatchedTagCollection(string line, out int lineLengthWithoutTags) Parameters Type Name Description System.String line System.Int32 lineLengthWithoutTags Returns Type Description System.Collections.IEnumerator ModifyMesh(VertexHelper) Declaration public override void ModifyMesh(VertexHelper vh) Parameters Type Name Description VertexHelper vh ModifyVertices(List<UIVertex>) Declaration public void ModifyVertices(List<UIVertex> verts) Parameters Type Name Description System.Collections.Generic.List < UIVertex > verts"
  },
  "api/SAMURAI.VanishAndBorn.html": {
    "href": "api/SAMURAI.VanishAndBorn.html",
    "title": "Class VanishAndBorn",
    "keywords": "Class VanishAndBorn Inheritance System.Object VanishAndBorn Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class VanishAndBorn : MonoBehaviour Fields center Declaration Vector3 center Field Value Type Description Vector3 Methods Check() Declaration void Check() Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.Wall_temp.html": {
    "href": "api/SAMURAI.Wall_temp.html",
    "title": "Class Wall_temp",
    "keywords": "Class Wall_temp Inheritance System.Object Wall_temp Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class Wall_temp : MonoBehaviour Fields normalVec Declaration public Vector3 normalVec Field Value Type Description Vector3 Methods OnTriggerEnter(Collider) Declaration void OnTriggerEnter(Collider other) Parameters Type Name Description Collider other Start() Declaration void Start() Update() Declaration void Update()"
  },
  "api/SAMURAI.WindInfoBase.html": {
    "href": "api/SAMURAI.WindInfoBase.html",
    "title": "Class WindInfoBase",
    "keywords": "Class WindInfoBase 風の情報を持ったクラス。これから派生させてください。 Inheritance System.Object WindInfoBase NonWind Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public abstract class WindInfoBase : MonoBehaviour Fields wind 風の力 Declaration public Vector3[][] wind Field Value Type Description Vector3 [][] Methods Start() 初期化。派生クラスでは自由に Declaration protected virtual void Start() WindEffect(Vector3) Declaration public Vector3 WindEffect(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Vector3"
  },
  "api/SAMURAI.WorldName.html": {
    "href": "api/SAMURAI.WorldName.html",
    "title": "Enum WorldName",
    "keywords": "Enum WorldName 各ステージの名前と順番 Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public enum WorldName Fields Name Description America China Russia UK WholeMap"
  },
  "api/SAMURAI.WorldSelectState.html": {
    "href": "api/SAMURAI.WorldSelectState.html",
    "title": "Class WorldSelectState",
    "keywords": "Class WorldSelectState Inheritance System.Object WorldSelectState Namespace : SAMURAI Assembly : Assembly-CSharp.dll Syntax public class WorldSelectState : ImtStateMachine<SelectStateManager>.State Methods Enter() Declaration protected override void Enter() Exit() Declaration protected override void Exit() Update() Declaration protected override void Update()"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE.",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}