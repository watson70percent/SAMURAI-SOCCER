### YamlMime:ManagedReference
items:
- uid: SAMURAI.CollisionManager
  commentId: T:SAMURAI.CollisionManager
  id: CollisionManager
  parent: SAMURAI
  children:
  - SAMURAI.CollisionManager.AddColliderDataList(SAMURAI.ColliderInputData,SAMURAI.CollisionManager.ColliderType)
  - SAMURAI.CollisionManager.Clear
  - SAMURAI.CollisionManager.CollisionCheck(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData)
  - SAMURAI.CollisionManager.CollisionDetection(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData,SAMURAI.Polygon,SAMURAI.Polygon,Vector3)
  - SAMURAI.CollisionManager.enemyBody
  - SAMURAI.CollisionManager.enemyWeapon
  - SAMURAI.CollisionManager.LateUpdate
  - SAMURAI.CollisionManager.OverrapCheck(Vector3,Vector3,Vector3,Vector3,Vector3,Vector3@)
  - SAMURAI.CollisionManager.playerBody
  - SAMURAI.CollisionManager.playerWeapon
  - SAMURAI.CollisionManager.PolygonTypeDic
  langs:
  - csharp
  - vb
  name: CollisionManager
  nameWithType: CollisionManager
  fullName: SAMURAI.CollisionManager
  type: Class
  source:
    id: CollisionManager
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: 'public class CollisionManager : MonoBehaviour'
    content.vb: >-
      Public Class CollisionManager
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SAMURAI.CollisionManager.playerBody
  commentId: F:SAMURAI.CollisionManager.playerBody
  id: playerBody
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: playerBody
  nameWithType: CollisionManager.playerBody
  fullName: SAMURAI.CollisionManager.playerBody
  type: Field
  source:
    id: playerBody
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static List<ColliderInputData> playerBody
    return:
      type: System.Collections.Generic.List{SAMURAI.ColliderInputData}
    content.vb: Shared playerBody As List(Of ColliderInputData)
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: SAMURAI.CollisionManager.playerWeapon
  commentId: F:SAMURAI.CollisionManager.playerWeapon
  id: playerWeapon
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: playerWeapon
  nameWithType: CollisionManager.playerWeapon
  fullName: SAMURAI.CollisionManager.playerWeapon
  type: Field
  source:
    id: playerWeapon
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static List<ColliderInputData> playerWeapon
    return:
      type: System.Collections.Generic.List{SAMURAI.ColliderInputData}
    content.vb: Shared playerWeapon As List(Of ColliderInputData)
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: SAMURAI.CollisionManager.enemyBody
  commentId: F:SAMURAI.CollisionManager.enemyBody
  id: enemyBody
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: enemyBody
  nameWithType: CollisionManager.enemyBody
  fullName: SAMURAI.CollisionManager.enemyBody
  type: Field
  source:
    id: enemyBody
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static List<ColliderInputData> enemyBody
    return:
      type: System.Collections.Generic.List{SAMURAI.ColliderInputData}
    content.vb: Shared enemyBody As List(Of ColliderInputData)
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: SAMURAI.CollisionManager.enemyWeapon
  commentId: F:SAMURAI.CollisionManager.enemyWeapon
  id: enemyWeapon
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: enemyWeapon
  nameWithType: CollisionManager.enemyWeapon
  fullName: SAMURAI.CollisionManager.enemyWeapon
  type: Field
  source:
    id: enemyWeapon
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static List<ColliderInputData> enemyWeapon
    return:
      type: System.Collections.Generic.List{SAMURAI.ColliderInputData}
    content.vb: Shared enemyWeapon As List(Of ColliderInputData)
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: SAMURAI.CollisionManager.PolygonTypeDic
  commentId: F:SAMURAI.CollisionManager.PolygonTypeDic
  id: PolygonTypeDic
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: PolygonTypeDic
  nameWithType: CollisionManager.PolygonTypeDic
  fullName: SAMURAI.CollisionManager.PolygonTypeDic
  type: Field
  source:
    id: PolygonTypeDic
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static readonly Dictionary<CollisionManager.ColliderType, List<ColliderInputData>> PolygonTypeDic
    return:
      type: System.Collections.Generic.Dictionary{SAMURAI.CollisionManager.ColliderType,System.Collections.Generic.List{SAMURAI.ColliderInputData}}
    content.vb: Shared ReadOnly PolygonTypeDic As Dictionary(Of CollisionManager.ColliderType, List(Of ColliderInputData))
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: SAMURAI.CollisionManager.AddColliderDataList(SAMURAI.ColliderInputData,SAMURAI.CollisionManager.ColliderType)
  commentId: M:SAMURAI.CollisionManager.AddColliderDataList(SAMURAI.ColliderInputData,SAMURAI.CollisionManager.ColliderType)
  id: AddColliderDataList(SAMURAI.ColliderInputData,SAMURAI.CollisionManager.ColliderType)
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: AddColliderDataList(ColliderInputData, CollisionManager.ColliderType)
  nameWithType: CollisionManager.AddColliderDataList(ColliderInputData, CollisionManager.ColliderType)
  fullName: SAMURAI.CollisionManager.AddColliderDataList(SAMURAI.ColliderInputData, SAMURAI.CollisionManager.ColliderType)
  type: Method
  source:
    id: AddColliderDataList
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: public static void AddColliderDataList(ColliderInputData colliderData, CollisionManager.ColliderType colliderType)
    parameters:
    - id: colliderData
      type: SAMURAI.ColliderInputData
    - id: colliderType
      type: SAMURAI.CollisionManager.ColliderType
    content.vb: Public Shared Sub AddColliderDataList(colliderData As ColliderInputData, colliderType As CollisionManager.ColliderType)
  overload: SAMURAI.CollisionManager.AddColliderDataList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SAMURAI.CollisionManager.LateUpdate
  commentId: M:SAMURAI.CollisionManager.LateUpdate
  id: LateUpdate
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: LateUpdate()
  nameWithType: CollisionManager.LateUpdate()
  fullName: SAMURAI.CollisionManager.LateUpdate()
  type: Method
  source:
    id: LateUpdate
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: void LateUpdate()
    content.vb: Sub LateUpdate
  overload: SAMURAI.CollisionManager.LateUpdate*
- uid: SAMURAI.CollisionManager.CollisionCheck(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData)
  commentId: M:SAMURAI.CollisionManager.CollisionCheck(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData)
  id: CollisionCheck(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData)
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: CollisionCheck(ColliderInputData, ColliderInputData)
  nameWithType: CollisionManager.CollisionCheck(ColliderInputData, ColliderInputData)
  fullName: SAMURAI.CollisionManager.CollisionCheck(SAMURAI.ColliderInputData, SAMURAI.ColliderInputData)
  type: Method
  source:
    id: CollisionCheck
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: void CollisionCheck(ColliderInputData A, ColliderInputData B)
    parameters:
    - id: A
      type: SAMURAI.ColliderInputData
    - id: B
      type: SAMURAI.ColliderInputData
    content.vb: Sub CollisionCheck(A As ColliderInputData, B As ColliderInputData)
  overload: SAMURAI.CollisionManager.CollisionCheck*
- uid: SAMURAI.CollisionManager.CollisionDetection(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData,SAMURAI.Polygon,SAMURAI.Polygon,Vector3)
  commentId: M:SAMURAI.CollisionManager.CollisionDetection(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData,SAMURAI.Polygon,SAMURAI.Polygon,Vector3)
  id: CollisionDetection(SAMURAI.ColliderInputData,SAMURAI.ColliderInputData,SAMURAI.Polygon,SAMURAI.Polygon,Vector3)
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: CollisionDetection(ColliderInputData, ColliderInputData, Polygon, Polygon, Vector3)
  nameWithType: CollisionManager.CollisionDetection(ColliderInputData, ColliderInputData, Polygon, Polygon, Vector3)
  fullName: SAMURAI.CollisionManager.CollisionDetection(SAMURAI.ColliderInputData, SAMURAI.ColliderInputData, SAMURAI.Polygon, SAMURAI.Polygon, Vector3)
  type: Method
  source:
    id: CollisionDetection
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: void CollisionDetection(ColliderInputData A, ColliderInputData B, Polygon polygonA, Polygon polygonB, Vector3 hitPoint)
    parameters:
    - id: A
      type: SAMURAI.ColliderInputData
    - id: B
      type: SAMURAI.ColliderInputData
    - id: polygonA
      type: SAMURAI.Polygon
    - id: polygonB
      type: SAMURAI.Polygon
    - id: hitPoint
      type: Vector3
    content.vb: Sub CollisionDetection(A As ColliderInputData, B As ColliderInputData, polygonA As Polygon, polygonB As Polygon, hitPoint As Vector3)
  overload: SAMURAI.CollisionManager.CollisionDetection*
- uid: SAMURAI.CollisionManager.OverrapCheck(Vector3,Vector3,Vector3,Vector3,Vector3,Vector3@)
  commentId: M:SAMURAI.CollisionManager.OverrapCheck(Vector3,Vector3,Vector3,Vector3,Vector3,Vector3@)
  id: OverrapCheck(Vector3,Vector3,Vector3,Vector3,Vector3,Vector3@)
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, out Vector3)
  nameWithType: CollisionManager.OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, out Vector3)
  fullName: SAMURAI.CollisionManager.OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, out Vector3)
  type: Method
  source:
    id: OverrapCheck
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: public static bool OverrapCheck(Vector3 trianglePosition, Vector3 triangleVector1, Vector3 triangleVector2, Vector3 lineStartPosition, Vector3 lineVector, out Vector3 hitPoint)
    parameters:
    - id: trianglePosition
      type: Vector3
    - id: triangleVector1
      type: Vector3
    - id: triangleVector2
      type: Vector3
    - id: lineStartPosition
      type: Vector3
    - id: lineVector
      type: Vector3
    - id: hitPoint
      type: Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverrapCheck(trianglePosition As Vector3, triangleVector1 As Vector3, triangleVector2 As Vector3, lineStartPosition As Vector3, lineVector As Vector3, ByRef hitPoint As Vector3) As Boolean
  overload: SAMURAI.CollisionManager.OverrapCheck*
  nameWithType.vb: CollisionManager.OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SAMURAI.CollisionManager.OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, ByRef Vector3)
  name.vb: OverrapCheck(Vector3, Vector3, Vector3, Vector3, Vector3, ByRef Vector3)
- uid: SAMURAI.CollisionManager.Clear
  commentId: M:SAMURAI.CollisionManager.Clear
  id: Clear
  parent: SAMURAI.CollisionManager
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CollisionManager.Clear()
  fullName: SAMURAI.CollisionManager.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 246
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: SAMURAI.CollisionManager.Clear*
references:
- uid: SAMURAI
  commentId: N:SAMURAI
  name: SAMURAI
  nameWithType: SAMURAI
  fullName: SAMURAI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{SAMURAI.ColliderInputData}
  commentId: T:System.Collections.Generic.List{SAMURAI.ColliderInputData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ColliderInputData>
  nameWithType: List<ColliderInputData>
  fullName: System.Collections.Generic.List<SAMURAI.ColliderInputData>
  nameWithType.vb: List(Of ColliderInputData)
  fullName.vb: System.Collections.Generic.List(Of SAMURAI.ColliderInputData)
  name.vb: List(Of ColliderInputData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SAMURAI.ColliderInputData
    name: ColliderInputData
    nameWithType: ColliderInputData
    fullName: SAMURAI.ColliderInputData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SAMURAI.ColliderInputData
    name: ColliderInputData
    nameWithType: ColliderInputData
    fullName: SAMURAI.ColliderInputData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{SAMURAI.CollisionManager.ColliderType,System.Collections.Generic.List{SAMURAI.ColliderInputData}}
  commentId: T:System.Collections.Generic.Dictionary{SAMURAI.CollisionManager.ColliderType,System.Collections.Generic.List{SAMURAI.ColliderInputData}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<CollisionManager.ColliderType, List<ColliderInputData>>
  nameWithType: Dictionary<CollisionManager.ColliderType, List<ColliderInputData>>
  fullName: System.Collections.Generic.Dictionary<SAMURAI.CollisionManager.ColliderType, System.Collections.Generic.List<SAMURAI.ColliderInputData>>
  nameWithType.vb: Dictionary(Of CollisionManager.ColliderType, List(Of ColliderInputData))
  fullName.vb: System.Collections.Generic.Dictionary(Of SAMURAI.CollisionManager.ColliderType, System.Collections.Generic.List(Of SAMURAI.ColliderInputData))
  name.vb: Dictionary(Of CollisionManager.ColliderType, List(Of ColliderInputData))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SAMURAI.CollisionManager.ColliderType
    name: CollisionManager.ColliderType
    nameWithType: CollisionManager.ColliderType
    fullName: SAMURAI.CollisionManager.ColliderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SAMURAI.ColliderInputData
    name: ColliderInputData
    nameWithType: ColliderInputData
    fullName: SAMURAI.ColliderInputData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SAMURAI.CollisionManager.ColliderType
    name: CollisionManager.ColliderType
    nameWithType: CollisionManager.ColliderType
    fullName: SAMURAI.CollisionManager.ColliderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SAMURAI.ColliderInputData
    name: ColliderInputData
    nameWithType: ColliderInputData
    fullName: SAMURAI.ColliderInputData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SAMURAI.CollisionManager.AddColliderDataList*
  commentId: Overload:SAMURAI.CollisionManager.AddColliderDataList
  name: AddColliderDataList
  nameWithType: CollisionManager.AddColliderDataList
  fullName: SAMURAI.CollisionManager.AddColliderDataList
- uid: SAMURAI.ColliderInputData
  commentId: T:SAMURAI.ColliderInputData
  parent: SAMURAI
  name: ColliderInputData
  nameWithType: ColliderInputData
  fullName: SAMURAI.ColliderInputData
- uid: SAMURAI.CollisionManager.ColliderType
  commentId: T:SAMURAI.CollisionManager.ColliderType
  parent: SAMURAI
  name: CollisionManager.ColliderType
  nameWithType: CollisionManager.ColliderType
  fullName: SAMURAI.CollisionManager.ColliderType
- uid: SAMURAI.CollisionManager.LateUpdate*
  commentId: Overload:SAMURAI.CollisionManager.LateUpdate
  name: LateUpdate
  nameWithType: CollisionManager.LateUpdate
  fullName: SAMURAI.CollisionManager.LateUpdate
- uid: SAMURAI.CollisionManager.CollisionCheck*
  commentId: Overload:SAMURAI.CollisionManager.CollisionCheck
  name: CollisionCheck
  nameWithType: CollisionManager.CollisionCheck
  fullName: SAMURAI.CollisionManager.CollisionCheck
- uid: SAMURAI.CollisionManager.CollisionDetection*
  commentId: Overload:SAMURAI.CollisionManager.CollisionDetection
  name: CollisionDetection
  nameWithType: CollisionManager.CollisionDetection
  fullName: SAMURAI.CollisionManager.CollisionDetection
- uid: SAMURAI.Polygon
  commentId: T:SAMURAI.Polygon
  parent: SAMURAI
  name: Polygon
  nameWithType: Polygon
  fullName: SAMURAI.Polygon
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: SAMURAI.CollisionManager.OverrapCheck*
  commentId: Overload:SAMURAI.CollisionManager.OverrapCheck
  name: OverrapCheck
  nameWithType: CollisionManager.OverrapCheck
  fullName: SAMURAI.CollisionManager.OverrapCheck
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SAMURAI.CollisionManager.Clear*
  commentId: Overload:SAMURAI.CollisionManager.Clear
  name: Clear
  nameWithType: CollisionManager.Clear
  fullName: SAMURAI.CollisionManager.Clear
