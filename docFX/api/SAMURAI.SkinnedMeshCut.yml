### YamlMime:ManagedReference
items:
- uid: SAMURAI.SkinnedMeshCut
  commentId: T:SAMURAI.SkinnedMeshCut
  id: SkinnedMeshCut
  parent: SAMURAI
  children:
  - SAMURAI.SkinnedMeshCut.CutMesh(SkinnedMeshRenderer,Vector3,Vector3)
  langs:
  - csharp
  - vb
  name: SkinnedMeshCut
  nameWithType: SkinnedMeshCut
  fullName: SAMURAI.SkinnedMeshCut
  type: Class
  source:
    id: SkinnedMeshCut
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\SkinnedMeshCut.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: 'public class SkinnedMeshCut : MonoBehaviour'
    content.vb: >-
      Public Class SkinnedMeshCut
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SAMURAI.SkinnedMeshCut.CutMesh(SkinnedMeshRenderer,Vector3,Vector3)
  commentId: M:SAMURAI.SkinnedMeshCut.CutMesh(SkinnedMeshRenderer,Vector3,Vector3)
  id: CutMesh(SkinnedMeshRenderer,Vector3,Vector3)
  parent: SAMURAI.SkinnedMeshCut
  langs:
  - csharp
  - vb
  name: CutMesh(SkinnedMeshRenderer, Vector3, Vector3)
  nameWithType: SkinnedMeshCut.CutMesh(SkinnedMeshRenderer, Vector3, Vector3)
  fullName: SAMURAI.SkinnedMeshCut.CutMesh(SkinnedMeshRenderer, Vector3, Vector3)
  type: Method
  source:
    id: CutMesh
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\SkinnedMeshCut.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  summary: "\ngameObjectを切断して2つのMeshにして返します.\n1つ目のMeshが切断面の法線に対して表側, 2つ目が裏側です.\n何度も切るようなオブジェクトでは\n"
  example: []
  syntax:
    content: public static Mesh[] CutMesh(SkinnedMeshRenderer target, Vector3 planeAnchorPoint, Vector3 planeNormalDirection)
    parameters:
    - id: target
      type: SkinnedMeshRenderer
      description: 切断対象のgameObject
    - id: planeAnchorPoint
      type: Vector3
      description: 切断面上の1点
    - id: planeNormalDirection
      type: Vector3
      description: 切断面の法線
    return:
      type: Mesh[]
      description: ''
    content.vb: Public Shared Function CutMesh(target As SkinnedMeshRenderer, planeAnchorPoint As Vector3, planeNormalDirection As Vector3) As Mesh()
  overload: SAMURAI.SkinnedMeshCut.CutMesh*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SAMURAI
  commentId: N:SAMURAI
  name: SAMURAI
  nameWithType: SAMURAI
  fullName: SAMURAI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SAMURAI.SkinnedMeshCut.CutMesh*
  commentId: Overload:SAMURAI.SkinnedMeshCut.CutMesh
  name: CutMesh
  nameWithType: SkinnedMeshCut.CutMesh
  fullName: SAMURAI.SkinnedMeshCut.CutMesh
- uid: SkinnedMeshRenderer
  commentId: '!:SkinnedMeshRenderer'
  isExternal: true
  name: SkinnedMeshRenderer
  nameWithType: SkinnedMeshRenderer
  fullName: SkinnedMeshRenderer
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Mesh[]
  isExternal: true
  name: Mesh[]
  nameWithType: Mesh[]
  fullName: Mesh[]
  nameWithType.vb: Mesh()
  fullName.vb: Mesh()
  name.vb: Mesh()
  spec.csharp:
  - uid: Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Mesh
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Mesh
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
