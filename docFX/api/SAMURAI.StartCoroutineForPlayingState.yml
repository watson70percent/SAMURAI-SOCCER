### YamlMime:ManagedReference
items:
- uid: SAMURAI.StartCoroutineForPlayingState
  commentId: T:SAMURAI.StartCoroutineForPlayingState
  id: StartCoroutineForPlayingState
  parent: SAMURAI
  children:
  - SAMURAI.StartCoroutineForPlayingState._gameManager
  - SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator(System.Collections.IEnumerator)
  - SAMURAI.StartCoroutineForPlayingState.Start
  - SAMURAI.StartCoroutineForPlayingState.taskEnumerators
  - SAMURAI.StartCoroutineForPlayingState.taskWaitTime
  - SAMURAI.StartCoroutineForPlayingState.Update
  langs:
  - csharp
  - vb
  name: StartCoroutineForPlayingState
  nameWithType: StartCoroutineForPlayingState
  fullName: SAMURAI.StartCoroutineForPlayingState
  type: Class
  source:
    id: StartCoroutineForPlayingState
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: 'public class StartCoroutineForPlayingState : MonoBehaviour'
    content.vb: >-
      Public Class StartCoroutineForPlayingState
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SAMURAI.StartCoroutineForPlayingState.taskEnumerators
  commentId: F:SAMURAI.StartCoroutineForPlayingState.taskEnumerators
  id: taskEnumerators
  parent: SAMURAI.StartCoroutineForPlayingState
  langs:
  - csharp
  - vb
  name: taskEnumerators
  nameWithType: StartCoroutineForPlayingState.taskEnumerators
  fullName: SAMURAI.StartCoroutineForPlayingState.taskEnumerators
  type: Field
  source:
    id: taskEnumerators
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static List<IEnumerator> taskEnumerators
    return:
      type: System.Collections.Generic.List{System.Collections.IEnumerator}
    content.vb: Shared taskEnumerators As List(Of IEnumerator)
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: SAMURAI.StartCoroutineForPlayingState.taskWaitTime
  commentId: F:SAMURAI.StartCoroutineForPlayingState.taskWaitTime
  id: taskWaitTime
  parent: SAMURAI.StartCoroutineForPlayingState
  langs:
  - csharp
  - vb
  name: taskWaitTime
  nameWithType: StartCoroutineForPlayingState.taskWaitTime
  fullName: SAMURAI.StartCoroutineForPlayingState.taskWaitTime
  type: Field
  source:
    id: taskWaitTime
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: static Dictionary<IEnumerator, float> taskWaitTime
    return:
      type: System.Collections.Generic.Dictionary{System.Collections.IEnumerator,System.Single}
    content.vb: Shared taskWaitTime As Dictionary(Of IEnumerator, Single)
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: SAMURAI.StartCoroutineForPlayingState._gameManager
  commentId: F:SAMURAI.StartCoroutineForPlayingState._gameManager
  id: _gameManager
  parent: SAMURAI.StartCoroutineForPlayingState
  langs:
  - csharp
  - vb
  name: _gameManager
  nameWithType: StartCoroutineForPlayingState._gameManager
  fullName: SAMURAI.StartCoroutineForPlayingState._gameManager
  type: Field
  source:
    id: _gameManager
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: GameManager _gameManager
    return:
      type: SAMURAI.GameManager
    content.vb: _gameManager As GameManager
- uid: SAMURAI.StartCoroutineForPlayingState.Start
  commentId: M:SAMURAI.StartCoroutineForPlayingState.Start
  id: Start
  parent: SAMURAI.StartCoroutineForPlayingState
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: StartCoroutineForPlayingState.Start()
  fullName: SAMURAI.StartCoroutineForPlayingState.Start()
  type: Method
  source:
    id: Start
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: SAMURAI.StartCoroutineForPlayingState.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SAMURAI.StartCoroutineForPlayingState.Update
  commentId: M:SAMURAI.StartCoroutineForPlayingState.Update
  id: Update
  parent: SAMURAI.StartCoroutineForPlayingState
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: StartCoroutineForPlayingState.Update()
  fullName: SAMURAI.StartCoroutineForPlayingState.Update()
  type: Method
  source:
    id: Update
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: public void Update()
    content.vb: Public Sub Update
  overload: SAMURAI.StartCoroutineForPlayingState.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator(System.Collections.IEnumerator)
  commentId: M:SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator(System.Collections.IEnumerator)
  id: AddTaskIEnumrator(System.Collections.IEnumerator)
  parent: SAMURAI.StartCoroutineForPlayingState
  langs:
  - csharp
  - vb
  name: AddTaskIEnumrator(IEnumerator)
  nameWithType: StartCoroutineForPlayingState.AddTaskIEnumrator(IEnumerator)
  fullName: SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator(System.Collections.IEnumerator)
  type: Method
  source:
    id: AddTaskIEnumrator
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\GameManager\StartCoroutineForPlayingState.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  summary: "\nIEnumeratorを追加してコルーチンっぽく処理する\n○○秒待ちたいときはyeild return 秒数(float型)でその秒数待つ\n"
  example: []
  syntax:
    content: public static void AddTaskIEnumrator(IEnumerator enumerator)
    parameters:
    - id: enumerator
      type: System.Collections.IEnumerator
      description: "\n処理してほしいIEnumerator\n"
    content.vb: Public Shared Sub AddTaskIEnumrator(enumerator As IEnumerator)
  overload: SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SAMURAI
  commentId: N:SAMURAI
  name: SAMURAI
  nameWithType: SAMURAI
  fullName: SAMURAI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.Collections.IEnumerator}
  commentId: T:System.Collections.Generic.List{System.Collections.IEnumerator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IEnumerator>
  nameWithType: List<IEnumerator>
  fullName: System.Collections.Generic.List<System.Collections.IEnumerator>
  nameWithType.vb: List(Of IEnumerator)
  fullName.vb: System.Collections.Generic.List(Of System.Collections.IEnumerator)
  name.vb: List(Of IEnumerator)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{System.Collections.IEnumerator,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{System.Collections.IEnumerator,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<IEnumerator, Single>
  nameWithType: Dictionary<IEnumerator, Single>
  fullName: System.Collections.Generic.Dictionary<System.Collections.IEnumerator, System.Single>
  nameWithType.vb: Dictionary(Of IEnumerator, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Collections.IEnumerator, System.Single)
  name.vb: Dictionary(Of IEnumerator, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SAMURAI.GameManager
  commentId: T:SAMURAI.GameManager
  parent: SAMURAI
  name: GameManager
  nameWithType: GameManager
  fullName: SAMURAI.GameManager
- uid: SAMURAI.StartCoroutineForPlayingState.Start*
  commentId: Overload:SAMURAI.StartCoroutineForPlayingState.Start
  name: Start
  nameWithType: StartCoroutineForPlayingState.Start
  fullName: SAMURAI.StartCoroutineForPlayingState.Start
- uid: SAMURAI.StartCoroutineForPlayingState.Update*
  commentId: Overload:SAMURAI.StartCoroutineForPlayingState.Update
  name: Update
  nameWithType: StartCoroutineForPlayingState.Update
  fullName: SAMURAI.StartCoroutineForPlayingState.Update
- uid: SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator*
  commentId: Overload:SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator
  name: AddTaskIEnumrator
  nameWithType: StartCoroutineForPlayingState.AddTaskIEnumrator
  fullName: SAMURAI.StartCoroutineForPlayingState.AddTaskIEnumrator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
