### YamlMime:ManagedReference
items:
- uid: SAMURAI.CollisionObject
  commentId: T:SAMURAI.CollisionObject
  id: CollisionObject
  parent: SAMURAI
  children:
  - SAMURAI.CollisionObject.CheckCollision
  - SAMURAI.CollisionObject.ColliderType
  - SAMURAI.CollisionObject.LinesOfTrabsform
  - SAMURAI.CollisionObject.OnCollision(SAMURAI.CollisionInfo)
  - SAMURAI.CollisionObject.StartOfCollisionInstance
  - SAMURAI.CollisionObject.UpdateOfCollisionInstance
  langs:
  - csharp
  - vb
  name: CollisionObject
  nameWithType: CollisionObject
  fullName: SAMURAI.CollisionObject
  type: Class
  source:
    id: CollisionObject
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 294
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: 'public abstract class CollisionObject : MonoBehaviour'
    content.vb: >-
      Public MustInherit Class CollisionObject
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SAMURAI.CollisionObject.LinesOfTrabsform
  commentId: P:SAMURAI.CollisionObject.LinesOfTrabsform
  id: LinesOfTrabsform
  parent: SAMURAI.CollisionObject
  langs:
  - csharp
  - vb
  name: LinesOfTrabsform
  nameWithType: CollisionObject.LinesOfTrabsform
  fullName: SAMURAI.CollisionObject.LinesOfTrabsform
  type: Property
  source:
    id: LinesOfTrabsform
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 296
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: protected abstract List<Transform[]> LinesOfTrabsform { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Transform[]}
    content.vb: Protected MustOverride ReadOnly Property LinesOfTrabsform As List(Of Transform())
  overload: SAMURAI.CollisionObject.LinesOfTrabsform*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: SAMURAI.CollisionObject.ColliderType
  commentId: P:SAMURAI.CollisionObject.ColliderType
  id: ColliderType
  parent: SAMURAI.CollisionObject
  langs:
  - csharp
  - vb
  name: ColliderType
  nameWithType: CollisionObject.ColliderType
  fullName: SAMURAI.CollisionObject.ColliderType
  type: Property
  source:
    id: ColliderType
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 298
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: public abstract CollisionManager.ColliderType ColliderType { get; }
    parameters: []
    return:
      type: SAMURAI.CollisionManager.ColliderType
    content.vb: Public MustOverride ReadOnly Property ColliderType As CollisionManager.ColliderType
  overload: SAMURAI.CollisionObject.ColliderType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: SAMURAI.CollisionObject.StartOfCollisionInstance
  commentId: M:SAMURAI.CollisionObject.StartOfCollisionInstance
  id: StartOfCollisionInstance
  parent: SAMURAI.CollisionObject
  langs:
  - csharp
  - vb
  name: StartOfCollisionInstance()
  nameWithType: CollisionObject.StartOfCollisionInstance()
  fullName: SAMURAI.CollisionObject.StartOfCollisionInstance()
  type: Method
  source:
    id: StartOfCollisionInstance
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 315
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: protected abstract void StartOfCollisionInstance()
    content.vb: Protected MustOverride Sub StartOfCollisionInstance
  overload: SAMURAI.CollisionObject.StartOfCollisionInstance*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: SAMURAI.CollisionObject.UpdateOfCollisionInstance
  commentId: M:SAMURAI.CollisionObject.UpdateOfCollisionInstance
  id: UpdateOfCollisionInstance
  parent: SAMURAI.CollisionObject
  langs:
  - csharp
  - vb
  name: UpdateOfCollisionInstance()
  nameWithType: CollisionObject.UpdateOfCollisionInstance()
  fullName: SAMURAI.CollisionObject.UpdateOfCollisionInstance()
  type: Method
  source:
    id: UpdateOfCollisionInstance
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 325
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  syntax:
    content: protected abstract void UpdateOfCollisionInstance()
    content.vb: Protected MustOverride Sub UpdateOfCollisionInstance
  overload: SAMURAI.CollisionObject.UpdateOfCollisionInstance*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: SAMURAI.CollisionObject.CheckCollision
  commentId: M:SAMURAI.CollisionObject.CheckCollision
  id: CheckCollision
  parent: SAMURAI.CollisionObject
  langs:
  - csharp
  - vb
  name: CheckCollision()
  nameWithType: CollisionObject.CheckCollision()
  fullName: SAMURAI.CollisionObject.CheckCollision()
  type: Method
  source:
    id: CheckCollision
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 344
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  summary: "\n衝突判定をとってほしいフレームでCollisionManagerにPolygonをおくる, Update内で使うこと(LateUpdateはだめ)\n"
  example: []
  syntax:
    content: protected void CheckCollision()
    content.vb: Protected Sub CheckCollision
  overload: SAMURAI.CollisionObject.CheckCollision*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SAMURAI.CollisionObject.OnCollision(SAMURAI.CollisionInfo)
  commentId: M:SAMURAI.CollisionObject.OnCollision(SAMURAI.CollisionInfo)
  id: OnCollision(SAMURAI.CollisionInfo)
  parent: SAMURAI.CollisionObject
  langs:
  - csharp
  - vb
  name: OnCollision(CollisionInfo)
  nameWithType: CollisionObject.OnCollision(CollisionInfo)
  fullName: SAMURAI.CollisionObject.OnCollision(SAMURAI.CollisionInfo)
  type: Method
  source:
    id: OnCollision
    path: D:\Program\Unity\SAMURAI-SOCCER\docFX\src\Assets\Project\Program\MeshCut\CollisionManager.cs
    startLine: 363
  assemblies:
  - Assembly-CSharp
  namespace: SAMURAI
  summary: "\n衝突が検知されたらこれが呼ばれる\n"
  example: []
  syntax:
    content: public abstract void OnCollision(CollisionInfo collisionInfo)
    parameters:
    - id: collisionInfo
      type: SAMURAI.CollisionInfo
    content.vb: Public MustOverride Sub OnCollision(collisionInfo As CollisionInfo)
  overload: SAMURAI.CollisionObject.OnCollision*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: SAMURAI
  commentId: N:SAMURAI
  name: SAMURAI
  nameWithType: SAMURAI
  fullName: SAMURAI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SAMURAI.CollisionObject.LinesOfTrabsform*
  commentId: Overload:SAMURAI.CollisionObject.LinesOfTrabsform
  name: LinesOfTrabsform
  nameWithType: CollisionObject.LinesOfTrabsform
  fullName: SAMURAI.CollisionObject.LinesOfTrabsform
- uid: System.Collections.Generic.List{Transform[]}
  commentId: T:System.Collections.Generic.List{Transform[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Transform[]>
  nameWithType: List<Transform[]>
  fullName: System.Collections.Generic.List<Transform[]>
  nameWithType.vb: List(Of Transform())
  fullName.vb: System.Collections.Generic.List(Of Transform())
  name.vb: List(Of Transform())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Transform
    name: Transform
    nameWithType: Transform
    fullName: Transform
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Transform
    name: Transform
    nameWithType: Transform
    fullName: Transform
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SAMURAI.CollisionObject.ColliderType*
  commentId: Overload:SAMURAI.CollisionObject.ColliderType
  name: ColliderType
  nameWithType: CollisionObject.ColliderType
  fullName: SAMURAI.CollisionObject.ColliderType
- uid: SAMURAI.CollisionManager.ColliderType
  commentId: T:SAMURAI.CollisionManager.ColliderType
  parent: SAMURAI
  name: CollisionManager.ColliderType
  nameWithType: CollisionManager.ColliderType
  fullName: SAMURAI.CollisionManager.ColliderType
- uid: SAMURAI.CollisionObject.StartOfCollisionInstance*
  commentId: Overload:SAMURAI.CollisionObject.StartOfCollisionInstance
  name: StartOfCollisionInstance
  nameWithType: CollisionObject.StartOfCollisionInstance
  fullName: SAMURAI.CollisionObject.StartOfCollisionInstance
- uid: SAMURAI.CollisionObject.UpdateOfCollisionInstance*
  commentId: Overload:SAMURAI.CollisionObject.UpdateOfCollisionInstance
  name: UpdateOfCollisionInstance
  nameWithType: CollisionObject.UpdateOfCollisionInstance
  fullName: SAMURAI.CollisionObject.UpdateOfCollisionInstance
- uid: SAMURAI.CollisionObject.CheckCollision*
  commentId: Overload:SAMURAI.CollisionObject.CheckCollision
  name: CheckCollision
  nameWithType: CollisionObject.CheckCollision
  fullName: SAMURAI.CollisionObject.CheckCollision
- uid: SAMURAI.CollisionObject.OnCollision*
  commentId: Overload:SAMURAI.CollisionObject.OnCollision
  name: OnCollision
  nameWithType: CollisionObject.OnCollision
  fullName: SAMURAI.CollisionObject.OnCollision
- uid: SAMURAI.CollisionInfo
  commentId: T:SAMURAI.CollisionInfo
  parent: SAMURAI
  name: CollisionInfo
  nameWithType: CollisionInfo
  fullName: SAMURAI.CollisionInfo
